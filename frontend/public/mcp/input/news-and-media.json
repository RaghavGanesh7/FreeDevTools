{
  "category": "news-and-media",
  "categoryDisplay": "News and Media",
  "description": "",
  "totalRepositories": 21,
  "repositories": {
    "ChanMeng666--server-google-news": {
      "owner": "ChanMeng666",
      "name": "server-google-news",
      "url": "https://github.com/ChanMeng666/server-google-news",
      "imageUrl": "/freedevtools/mcp/pfp/ChanMeng666.webp",
      "description": "Search and categorize news articles from Google News using SerpAPI integration. Provides access to real-time news data through a structured API interface.",
      "stars": 83,
      "forks": 19,
      "license": "MIT License",
      "language": "TypeScript",
      "updated_at": "2025-10-02T21:35:37Z",
      "readme_content": "[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/chanmeng666-server-google-news-badge.png)](https://mseep.ai/app/chanmeng666-server-google-news)\n\n<div align=\"center\">\n <h1><br/>Google News MCP Server</h1>\n <a href=\"https://github.com/ChanMeng666/server-google-news/stargazers\"><img alt=\"server_google_news_svg_style_social\" src=\"https://img.shields.io/github/stars/ChanMeng666/server-google-news.svg?style=social\"></a>\n <img alt=\"TypeScript_007ACC_style_flat_logo_typescript_logoColor_white\" src=\"https://img.shields.io/badge/TypeScript-007ACC?style=flat&logo=typescript&logoColor=white\"/>\n <img alt=\"Node_js_43853D_style_flat_logo_node_js_logoColor_white\" src=\"https://img.shields.io/badge/Node.js-43853D?style=flat&logo=node.js&logoColor=white\"/>\n <img alt=\"MCP_Server_blue_style_flat\" src=\"https://img.shields.io/badge/MCP-Server-blue?style=flat\"/>\n <img alt=\"License_MIT_brightgreen_style_flat\" src=\"https://img.shields.io/badge/License-MIT-brightgreen?style=flat\"/>\n</div>\n\n<br/>\n\n<div align=\"center\">\n  <a href=\"https://www.pulsemcp.com/servers/chanmeng666-google-news\"><img src=\"https://www.pulsemcp.com/badge/top-pick/chanmeng666-google-news\" width=\"400\" alt=\"PulseMCP Badge\"></a>\n</div>\n\n\n<br/>\n\nA Model Context Protocol (MCP) server implementation that provides Google News search capabilities via SerpAPI integration. Automatically categorizes news results and supports multiple languages and regions.\n\n<a href=\"https://glama.ai/mcp/servers/dbx6imq4ef\"><img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/dbx6imq4ef/badge\" alt=\"Google News Server MCP server\" /></a>\n\n<br/>\n\n[![üëâTry It Now!üëà](https://gradient-svg-generator.vercel.app/api/svg?text=%F0%9F%91%89Try%20It%20Now!%F0%9F%91%88&color=000000&height=60&gradientType=radial&duration=6s&color0=ffffff&template=pride-rainbow)](https://smithery.ai/server/@chanmeng666/google-news-server)\n\n<br/>\n\nhttps://github.com/user-attachments/assets/1cc71c27-f840-4c94-9ab5-460d84ba4779\n\n\n![Â±èÂπïÊà™Âõæ 2024-12-30 021446](https://github.com/user-attachments/assets/34985fac-a529-4aac-a77d-b0b93f70d0f7)\n\n![Â±èÂπïÊà™Âõæ 2024-12-30 021524](https://github.com/user-attachments/assets/6d1d3069-db04-421e-83b9-6ecdbce4847e)\n\n![Â±èÂπïÊà™Âõæ 2024-12-30 021914](https://github.com/user-attachments/assets/16889a09-c05d-47dc-b3fe-5ea3771e059d)\n\n![Â±èÂπïÊà™Âõæ 2024-12-30 021941](https://github.com/user-attachments/assets/da20e7a6-f2e8-4aec-bab9-f19322d0f798)\n\n\n# ‚ú® Features\n\n### üîç Flexible Search Options\nComprehensive search capabilities including query-based search, topic search, publication filtering and story coverage.\n\n### üåê Global Coverage\nSupports multiple languages and regions through configurable language and country codes.\n\n### üìä Smart Categorization \nAutomatically categorizes news results into topics like AI & Technology, Business, Science & Research, and Healthcare.\n\n### üîÄ Multiple Result Types\nHandles various news result types including headlines, stories, related topics and menu links.\n\n### üõ†Ô∏è Robust Error Handling\nComprehensive error handling for API failures and invalid inputs, with helpful error messages.\n\n### üåç Language Support\nAutomatic fallback to English for unsupported language codes with appropriate user notifications.\n\n# üîë SerpApi Setup Guide\n\nBefore getting started, you'll need to obtain a SerpApi key. Here's how:\n\n1. Visit [SerpApi website](https://serpapi.com/) and create an account\n\n2. After registration, go to your Dashboard:\n   - Locate the \"API Key\" section\n   - Copy your API key\n   - New users get 250 free API calls\n\n3. API Usage Details:\n   - Free tier: 250 searches per month\n   - Paid plans start at $75/month for 5000 searches\n   - Billing based on successful API calls\n   - Multiple payment methods: Credit Card, PayPal, etc.\n\n4. Usage Limits:\n   - Request Rate: 2 requests/second\n   - IP Restrictions: None\n   - Concurrent Requests: 5\n   - Response Cache Time: 1 hour\n\n# üë©‚Äçüîß Solution for MCP Servers Connection Issues with NVM/NPM\n\nClick to view my configuration solution üëâ https://github.com/modelcontextprotocol/servers/issues/76\n\n# üöÄ Quick Start\n\n1. Install dependencies:\n```bash\nnpm install\n```\n\n2. Build the server:\n```bash\nnpm run build\n```\n\n3. Configure environment:\nModify your `claude_desktop_config.json` with the following content (adjust paths according to your system):\n```json\n    \"google-news\": {\n      \"command\": \"D:\\\\Program\\\\nvm\\\\node.exe\",\n      \"args\": [\n        \"D:\\\\github_repository\\\\path_to\\\\dist\\\\index.js\"\n      ],\n      \"env\": {\n        \"SERP_API_KEY\": \"your-api-key\"\n      }\n    }\n```\n\n4. Start the server:\n```bash\nnpm start\n```\n\n## Troubleshooting\n\n1. Invalid API Key\n- Verify API key configuration in `claude_desktop_config.json`\n- Confirm API key is active in SERP API dashboard\n\n2. Request Failures\n- Check network connectivity\n- Verify API call quota hasn't been exceeded\n- Validate request parameter format\n\n\n\n## Running evals\n\nThe evals package loads an mcp client that then runs the index.ts file, so there is no need to rebuild between tests. You can load environment variables by prefixing the npx command. Full documentation can be found [here](https://www.mcpevals.io/docs).\n\n```bash\nOPENAI_API_KEY=your-key  npx mcp-eval src/evals/evals.ts src/index.ts\n```\n# üì¶ Installation\n\n## Installing via Smithery\n\nTo install Google News for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@chanmeng666/google-news-server):\n\n```bash\nnpx -y @smithery/cli install @chanmeng666/google-news-server --client claude\n```\n\n[![Trust Score](https://archestra.ai/mcp-catalog/api/badge/quality/ChanMeng666/server-google-news)](https://archestra.ai/mcp-catalog/chanmeng666__server-google-news)\n[![smithery badge](https://smithery.ai/badge/@chanmeng666/google-news-server)](https://smithery.ai/server/@chanmeng666/google-news-server)\n\n## Installing via mcp-get\n\n```bash\nnpx @michaellatman/mcp-get@latest install @chanmeng666/google-news-server\n```\n\n> If you are using an old version of Windows PowerShell, you may need to run `Set-ExecutionPolicy Bypass -Scope Process` before this command.\n\n## Manual Installation\n\n<img alt=\"CB3837\" src=\"https://cdn.simpleicons.org/npm/CB3837\" height=\"14\"/> <a href=\"https://www.npmjs.com/package/@chanmeng666/google-news-server\">@chanmeng666/google-news-server</a>\n\n```bash\n# Using npm\nnpm i @chanmeng666/google-news-server\n# or\nnpm install @chanmeng666/google-news-server\n\n# Using yarn\nyarn add @chanmeng666/google-news-server\n\n# Using pnpm\npnpm add @chanmeng666/google-news-server\n```\n\n# üíª Tech Stack\n![TypeScript](https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white)\n![NodeJS](https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white)\n![MCP](https://img.shields.io/badge/MCP-SDK-blue?style=for-the-badge)\n\n# üìñ API Documentation\n\nThe server implements the Model Context Protocol and exposes a Google News search tool with the following parameters:\n\n- `q`: Search query string\n- `gl`: Country code (e.g., 'us', 'uk')\n- `hl`: Language code (e.g., 'en', 'es')\n- `topic_token`: Token for specific news topics\n- `publication_token`: Token for specific publishers\n- `story_token`: Token for full coverage of a story\n- `section_token`: Token for specific sections\n\n# üîß Development\n\n```bash\n# Run in development mode with hot reload\nnpm run dev\n\n# Run linting\nnpm run lint\n\n# Run tests\nnpm run test\n```\n\n# üìù License\n\nThis project is [MIT licensed](./LICENSE).\n\n# üôã‚Äç‚ôÄ Author\n\nCreated and maintained by [Chan Meng](https://chanmeng.org/).\n[![GitHub](https://img.shields.io/badge/github-%23121011.svg?style=normal&logo=github&logoColor=white)](https://github.com/ChanMeng666)\n[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=normal&logo=linkedin&logoColor=white)](https://www.linkedin.com/in/chanmeng666/)\n\n---\n\n<details>\n<summary>ü§ñ AI Agent Instructions & GEO Optimization</summary>\n\n## For AI Agents and LLM Crawlers\n\nThis MCP server is optimized for AI agent usage with comprehensive instructions and structured data.\n\n### Quick AI Usage Guide\n\n```json\n{\n  \"tool\": \"google_news_search\",\n  \"parameters\": {\n    \"q\": \"artificial intelligence latest developments\",\n    \"gl\": \"us\",\n    \"hl\": \"en\"\n  }\n}\n```\n\n### AI-Friendly Features\n- **Automatic Categorization**: News results are automatically sorted into relevant categories\n- **Structured Output**: Returns formatted data optimized for AI processing\n- **Multi-language Support**: Supports various languages with automatic fallbacks\n- **Error Handling**: Comprehensive error messages and graceful degradation\n\n### Response Format\nThe server returns categorized news with the following structure:\n- **Categories**: AI & Technology, Business, Science & Research, Healthcare, General\n- **Article Fields**: title, source, link, date, snippet, authors\n- **Metadata**: timestamp, menu_links for related topics\n\n### Best Practices for AI Agents\n1. Use specific, descriptive keywords for better results\n2. Leverage automatic categorization for topic-based workflows\n3. Implement proper error handling and retry logic\n4. Respect API rate limits (2 requests/second)\n5. Parse structured responses for better context understanding\n\n### Advanced Usage Patterns\n- **News Monitoring**: Use company names or stock symbols for business news\n- **Research Exploration**: Leverage topic tokens for field-specific searches\n- **Breaking News**: Use \"breaking news\" or \"latest news\" queries\n- **Multi-language**: Combine appropriate gl and hl parameters\n\n### Error Handling\n- Invalid API key: Check SERP_API_KEY environment variable\n- Unsupported language: Server auto-falls back to English\n- Rate limiting: Respect 2 requests/second limit\n- Invalid parameters: Validate parameter types before calling\n\n\n</details>\n\n<details>\n<summary>üìä GEO Metrics & Monitoring</summary>\n\n## Generative Engine Optimization (GEO) Features\n\nThis server includes comprehensive monitoring and optimization for AI agent usage.\n\n### Key Metrics Tracked\n- **Citation Success Rate**: Percentage of successful tool calls\n- **AI Traffic Conversion Rate**: Percentage of AI agents successfully using the tool\n- **Query Coverage Rate**: Percentage of queries returning relevant results\n- **Response Time**: Average response time for tool calls\n- **Categorization Accuracy**: Accuracy of automatic news categorization\n- **Link Carry Rate**: Percentage of responses including source links\n\n### Monitoring Configuration\n```typescript\ninterface GEOMonitoringConfig {\n  trackingEnabled: boolean;\n  metricsEndpoint: string;\n  reportingInterval: number; // minutes\n  alertThresholds: {\n    errorRate: number;\n    responseTime: number;\n    successRate: number;\n    satisfactionScore: number;\n  };\n}\n```\n\n### Performance Optimization\n- Real-time metrics collection\n- Automated alerting for performance issues\n- Query pattern analysis for optimization\n- Agent usage tracking and analytics\n\n### Data-Driven Improvements\n- Continuous monitoring of AI agent satisfaction\n- Query success rate analysis\n- Response time optimization\n- Categorization accuracy improvements\n\nFor technical implementation details, see [src/geo-metrics.ts](./src/geo-metrics.ts).\n\n</details>\n\n<details>\n<summary>üîç Structured Data & Metadata</summary>\n\n## AI-Optimized Metadata\n\nThis server provides comprehensive structured data for AI agents and search engines.\n\n### JSON-LD Structured Data\nThe server includes structured data following Schema.org standards:\n- Software application metadata\n- Feature descriptions and capabilities\n- Technical requirements and dependencies\n- Usage patterns and integration guidelines\n\n### MCP Protocol Compliance\n- **Protocol Version**: 1.0.0\n- **Tool Name**: `google_news_search`\n- **Response Format**: Structured text with categorized results\n- **Rate Limits**: 2 requests/second, 5 concurrent requests\n\n### AI Discovery Features\n- **llms.txt**: Comprehensive AI usage guide at root level\n- **Structured Metadata**: Enhanced manifest.json with AI-specific information\n- **Error Handling**: AI-friendly error messages and fallbacks\n- **Documentation**: Detailed usage examples and best practices\n\n### Integration Guidelines\n- Designed for seamless integration with other MCP servers\n- Optimized for AI agent workflows\n- Supports various AI platforms and frameworks\n- Provides clear error handling and debugging information\n\nFor complete structured data, see [structured-data.json](./structured-data.json).\n\n</details>",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "news",
        "api",
        "serpapi",
        "google news",
        "news data",
        "news search"
      ],
      "category": "news-and-media"
    },
    "Oliviergg--boring-news-mcp": {
      "owner": "Oliviergg",
      "name": "boring-news-mcp",
      "url": "https://github.com/Oliviergg/boring-news-mcp",
      "imageUrl": "/freedevtools/mcp/pfp/Oliviergg.webp",
      "description": "Fetch and summarize the latest news articles tailored to user interests. Access articles by date, category, tags, and more, along with predefined prompts for daily summaries and highlights.",
      "stars": 0,
      "forks": 1,
      "license": "No License",
      "language": "Python",
      "updated_at": "2025-04-22T15:47:53Z",
      "readme_content": "# Boring News MCP Server\nA Python server library for interacting with the Boring News API from a MCP (Model Context Protocol) server like Claude Desktop.\nThe website : [boring-news.fr](https://boring-news.fr)\n\n\n## Features\nfour actions : \n- Fetch articles by date, category, or tags\n- Get articles mentioning specific people\n- Find similar articles based on text content\n- Get article groups and categories\n\n- Predefined Prompts\n  - Daily news (tech and culture focused)\n  - Comprehensive daily summaries\n  - News highlights\n  - Cultural news focus\n\n## Quick Start\n```bash\npip install boring-news-mcp\n```\n\n### Exemple of claude Desktop Configuration\n```json\n{\n  \"mcpServers\": {\n    ...      \n    \"boringnews\": {\n          \"command\": \"python\",\n          \"args\": [\n                \"-m\", \n                \"boring_news_mcp\"\n          ]\n      },\n    ...\n    }\n}\n```\n\n## API Reference\n\n### Articles\n\n- `get_articles_by_date(date: Optional[str], category: Optional[str], tags: Optional[str]) -> str`\n- `get_articles_by_person(person: str) -> str`\n- `get_similar_articles(text: str) -> str`\n- `get_article_groups(date: Optional[str]) -> str`\n- `get_categories(date: Optional[str]) -> str`\n\n### News Summaries Prompt\n\n- `daily_news(target_date: str) -> str`\n- `daily_news_summary(target_date: str) -> str`\n- `daily_news_highlights(target_date: str) -> str`\n- `daily_cultural_news(target_date: str) -> str`\n\n## Requirements\n\n- Python >= 3.8\n- httpx >= 0.25.0\n- fastmcp >= 0.1.0\n\n## License\n\nMIT License\n\n\n\n# Build\n```\nuv run -m buid\nuv run -m twine upload dist/*\nrm dist/*\n```",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "news",
        "mcp",
        "articles",
        "news mcp",
        "news articles",
        "news media"
      ],
      "category": "news-and-media"
    },
    "SomeiLam--news-mcp": {
      "owner": "SomeiLam",
      "name": "news-mcp",
      "url": "https://github.com/SomeiLam/news-mcp",
      "imageUrl": "/freedevtools/mcp/pfp/SomeiLam.webp",
      "description": "Aggregates and searches news articles, formatting them into Markdown digests using real-time news data. Supports fetching top headlines by various filters and performing full-text searches with optional criteria.",
      "stars": 0,
      "forks": 2,
      "license": "No License",
      "language": "TypeScript",
      "updated_at": "2025-05-03T04:52:13Z",
      "readme_content": "# NewsDigest MCP\n\nA **Model Context Protocol (MCP)** server written in TypeScript that aggregates, searches, and formats news articles using the NewsAPI.org REST endpoints.\n\n## Features\n\n- **Fetch Top Headlines** by country (ISO‚Äë2 code), language (ISO‚Äë639‚Äë1 code), and category (e.g., business, sports).\n- **Search Everything** via full‚Äëtext queries (keywords) with optional filters: language, date range, sorting, page size.\n- **Format to Markdown**: Convert raw JSON responses into a clean, reader‚Äëfriendly Markdown digest using an LLM (Gemini and Claude).\n\n## Requirements\n\n- **Node.js 18+** (for built‚Äëin `fetch` support)\n- **npm** or **yarn**\n- **NewsAPI.org API key** (free tier available)\n- **LLM API key** (Gemini and Claude)\n\n## Installation\n\n```\n# Clone the repo\ngit clone https://github.com/yourusername/newsdigest-mcp.git\ncd newsdigest-mcp\n\n# Install dependencies\nnpm install\n# or\n# yarn install\n```\n\n## Configuration\n\nCreate a `.env` file in the project root:\n```\n# .env\nNEWSAPI_KEY=<your_newsapi_key>\nGEMINI_API_KEY=<your_gemini_key>   # for Google Gemini\nANTHROPIC_API_KEY=<your_claude_key>  # for Anthropic Claude\n```\n\n## Usage\nStart the MCP server:\n```\nclaude\n```\n\nHere are some example user queries and response:\n\nQ: News about Bitcoin\n\nA: Latest Bitcoin News (May 1, 2025)\n\n1. El Salvador Committed to Buy Bitcoin Despite IMF Requirements\n  - El Salvador's economy minister reaffirmed the country's commitment to accumulate more\nBitcoin despite IMF requirements to reduce exposure\n  - The minister called it an \"important project\" started by President Nayib Bukele\n2. North Carolina Passes Bill to Integrate Bitcoin Into $127 Billion Pension Fund\n  - North Carolina House approved legislation allowing state pension fund to invest in\ncryptocurrencies\n  - The bill modernizes investment strategy for the state's $127 billion pension fund\n3. US Could Buy $100 Billion in Bitcoin This Year, According to Coinbase Executive\n  - Sebastian Bea, president of Coinbase Asset Management, suggests a technical change in\nhow Washington accounts for gold could enable a strategic Bitcoin purchase\n  - The proposed purchase could approach $100 billion, years ahead of market expectations\n4. North Carolina House Passes State Crypto Investment Bill\n  - The Digital Assets Investment Act (House Bill 92) passed on its third reading\n  - Bill allows the state treasurer to invest public funds in approved cryptocurrencies\n  - Now moving to the Senate for consideration\n5. Crypto Industry Event in Dubai as \"Trump Euphoria\" Shows Signs of Receding\n  - Crypto enthusiasts gathered in Dubai for TOKEN2049 conference\n  - Industry showing mixed sentiments about Donald Trump's impact on cryptocurrencies\n  - Despite strong start to the year with significant venture capital investments\n6. Malaysian Police Dismantle Bitcoin Mining Operation Stealing Electricity\n  - Police in Terengganu, Malaysia dismantled a syndicate stealing electricity for illegal\nbitcoin mining\n  - Operations were discovered in Hulu Terengganu and Marang regions",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "headlines",
        "news",
        "markdown",
        "news data",
        "searches news",
        "fetching headlines"
      ],
      "category": "news-and-media"
    },
    "VectorInstitute--mcp-goodnews": {
      "owner": "VectorInstitute",
      "name": "mcp-goodnews",
      "url": "https://github.com/VectorInstitute/mcp-goodnews",
      "imageUrl": "/freedevtools/mcp/pfp/VectorInstitute.webp",
      "description": "Fetch uplifting and positive news stories by analyzing sentiment using large language models. Provides access to curated articles that highlight positive events and developments worldwide.",
      "stars": 42,
      "forks": 7,
      "license": "Apache License 2.0",
      "language": "Python",
      "updated_at": "2025-09-12T01:40:49Z",
      "readme_content": "[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/vectorinstitute-mcp-goodnews-badge.png)](https://mseep.ai/app/vectorinstitute-mcp-goodnews)\r\n\r\n<!-- markdownlint-disable-file MD033 -->\r\n\r\n# MCP Goodnews\r\n\r\n---\r\n\r\n[![CodeQL](https://github.com/VectorInstitute/mcp-goodnews/actions/workflows/github-code-scanning/codeql/badge.svg)](https://github.com/VectorInstitute/mcp-goodnews/actions/workflows/github-code-scanning/codeql)\r\n[![Linting](https://github.com/VectorInstitute/mcp-goodnews/actions/workflows/lint.yml/badge.svg)](https://github.com/VectorInstitute/mcp-goodnews/actions/workflows/lint.yml)\r\n[![Unit Testing and Upload Coverage](https://github.com/VectorInstitute/mcp-goodnews/actions/workflows/unit_test.yml/badge.svg)](https://github.com/VectorInstitute/mcp-goodnews/actions/workflows/unit_test.yml)\r\n[![codecov](https://codecov.io/github/VectorInstitute/mcp-goodnews/graph/badge.svg?token=KvwFM5bQiH)](https://codecov.io/github/VectorInstitute/mcp-goodnews)\r\n[![Release](https://github.com/VectorInstitute/mcp-goodnews/actions/workflows/release.yml/badge.svg)](https://github.com/VectorInstitute/mcp-goodnews/actions/workflows/release.yml)\r\n![GitHub License](https://img.shields.io/github/license/VectorInstitute/mcp-goodnews)\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://d3ddy8balm3goa.cloudfront.net/vector-mcp-goodnews/logo.svg\" alt=\"MCP Goodnews Logo\" width=\"400\"/>\r\n</p>\r\n\r\nMCP Goodnews is a simple Model Context Protocol (MCP) application that features\r\na server for getting good, positive, and uplifting news. This tool fetches news\r\narticles from the [NewsAPI](https://newsapi.org/) and uses a Cohere LLM to rank\r\nand return the top news articles based on positive sentiment.\r\n\r\nRead the [blog post](https://medium.com/data-science-collective/goodnews-mcp-good-news-at-your-fingertips-d6cda34d558d) on Medium!\r\n\r\n## Motivation\r\n\r\nIn a world where negative news often dominates headlines, Goodnews MCP aims to\r\nshine a light on more positive and uplifting news stories. This project was\r\ninspired by an earlier initiative called GoodnewsFirst, which delivered positive\r\nnews daily to email subscribers ‚Äî it was a really awesome project! While GoodnewsFirst\r\npredated recent breakthroughs in Large Language Models (LLMs) and relied on\r\ntraditional methods for sentiment ranking, Goodnews MCP leverages modern LLMs to\r\nperform sentiment analysis in a zero-shot setting.\r\n\r\n## Example Usage: MCP Goodnews with Claude Desktop\r\n\r\n<img width=\"1112\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fe204338-7505-4ce5-91b8-0b0b611099e1\" />\r\n\r\n### Requirements\r\n\r\n- [Cohere API Key](https://dashboard.cohere.com/)\r\n- [NewsAPI Key](https://newsapi.org/)\r\n- [Claude Desktop Application](https://claude.ai/download)\r\n- [uv Python Project and Package Manager](https://docs.astral.sh/uv/getting-started/installation/)\r\n\r\n### Clone `mcp-goodnews`\r\n\r\n```bash\r\n# Clone the repository\r\ngit clone https://github.com/VectorInstitute/mcp-goodnews.git\r\n```\r\n\r\nIn the next step, we'll need to provide the absolute path to the location of this\r\ncloned repository.\r\n\r\n### Update Claude Desktop Config to find mcp-goodnews\r\n\r\n#### For Mac/Linux\r\n\r\n```bash\r\n# Navigate to the configuration directory\r\ncd ~/Library/Application\\ Support/Claude/config\r\n\r\n# Edit the claude_desktop_config.json file\r\nnano claude_desktop_config.json\r\n```\r\n\r\n#### For Windows\r\n\r\n```bash\r\n# Navigate to the configuration directory\r\ncd %APPDATA%\\Claude\\config\r\n\r\n# Edit the claude_desktop_config.json file\r\nnotepad claude_desktop_config.json\r\n```\r\n\r\nAnd you'll want to add an entry under `mcpServers` for `Goodnews`:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"Goodnews\": {\r\n      \"command\": \"<absolute-path-to-bin>/uv\",\r\n      \"args\": [\r\n        \"--directory\",\r\n        \"<absolute-path-to-cloned-repo>/mcp-goodnews/src/mcp_goodnews\",\r\n        \"run\",\r\n        \"server.py\"\r\n      ],\r\n      \"env\": {\r\n        \"NEWS_API_KEY\": \"<newsapi-api-key>\",\r\n        \"COHERE_API_KEY\": \"<cohere-api-key>\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Start or Restart Claude Desktop\r\n\r\nClaude Desktop will use the updated config to build and run the mcp-goodnews server.\r\nIf successful, you will see the hammer tool in the bottom-right corner of the chat\r\ndialogue window.\r\n\r\n<img width=\"749\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f871451b-cd66-4a75-bdde-35220e485203\" />\r\n\r\nClicking the hammer tool icon will bring up a modal that lists available MCP tools.\r\nYou should see `fetch_list_of_goodnews` listed there.\r\n\r\n<img width=\"505\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d68bef03-0926-4ae9-8b4a-00a003097169\" />\r\n\r\n### Ask Claude for Good News\r\n\r\nExample prompts:\r\n\r\n- \"Show me some good news from today.\"\r\n- \"What positive things happened in the world this week?\"\r\n- \"Give me uplifting news stories about science.\"\r\n\r\n## How It Works\r\n\r\n1. When you request good news, the application queries the NewsAPI for recent articles\r\n2. The Cohere LLM analyzes the sentiment of each article\r\n3. Articles are ranked based on positive sentiment score\r\n4. The top-ranking good news stories are returned to you through Claude\r\n\r\n## License\r\n\r\n[Apache 2.0](./LICENSE)\r\n\r\n---\r\n\r\n_Stay positive with Goodnews MCP!_\r\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "goodnews",
        "sentiment",
        "news",
        "positive news",
        "mcp goodnews",
        "sentiment using"
      ],
      "category": "news-and-media"
    },
    "buhe--mcp_rss": {
      "owner": "buhe",
      "name": "mcp_rss",
      "url": "https://github.com/buhe/mcp_rss",
      "imageUrl": "/freedevtools/mcp/pfp/buhe.webp",
      "description": "Fetch and manage articles from various RSS feeds with features for automatic fetching, filtering, and favoriting articles. Supports importing RSS feed subscriptions via OPML files and exposes the content through an MCP API.",
      "stars": 19,
      "forks": 6,
      "license": "MIT License",
      "language": "TypeScript",
      "updated_at": "2025-08-12T08:09:37Z",
      "readme_content": "[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/buhe-mcp-rss-badge.png)](https://mseep.ai/app/buhe-mcp-rss)\n\n# MCP RSS\n\nMCP RSS is a Model Context Protocol (MCP) server for interacting with RSS feeds.\n\n## Features\n\n- Parse OPML files to import RSS feed subscriptions\n- Automatically fetch and update articles from RSS feeds\n- Expose RSS content through MCP API\n- Mark articles as favorites\n- Filter articles by source and status\n\n## Installation\n\n### Prerequisites\n\n- Node.js (v14 or higher)\n- MySQL database\n\n### Setup MySQL\n\n```bash\ndocker run -itd --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql\n```\n\n### Install MCP\n\nThis MCP uses stdio for communication. Fill in ``` npx mcp_rss ``` in the command, fill in the configuration that needs to be customized in the environment variable, and at least use your own opml file.\n\nUse in claude desktop\n```json\n{\n  \"command\": \"npx\",\n  \"args\": [\n    \"mcp_rss\"\n  ],\n  \"env\": {\n    \"OPML_FILE_PATH\": \"/PATH/YOUR_FEED_FILE.opml\"\n  }\n}\n\n```\n\n## Configuration\n\nSet the following environment variables to configure MCP RSS:\n\n### Configuration Options\n\n| Option | Description | Default Value |\n|--------|-------------|--------------|\n| DB_HOST | Database host | localhost |\n| DB_PORT | Database port | 3306 |\n| DB_USERNAME | Database username | root |\n| DB_PASSWORD | Database password | 123456 |\n| DB_DATABASE | Database name | mcp_rss |\n| OPML_FILE_PATH | Path to your OPML file with RSS feeds | \"./feeds.opml\" |\n| RSS_UPDATE_INTERVAL | Interval to fetch RSS updates (in minutes) | 1 |\n\n## MCP API Reference\n\nThe MCP RSS server exposes the following API methods:\n\n### get_content\n\nGet articles from subscribed RSS feeds.\n\n**Parameters:**\n\n| Parameter | Type | Description | Required |\n|-----------|------|-------------|---------|\n| status | string | Filter by article status (\"normal\" or \"favorite\") | No |\n| source | string | Filter by source (feed title) | No |\n| limit | number | Maximum number of articles to return | No (default: 10) |\n\n**Response:**\n\n```json\n{\n  \"articles\": [\n    {\n      \"id\": 1,\n      \"title\": \"Article Title\",\n      \"content\": \"Article content...\",\n      \"link\": \"https://example.com/article\",\n      \"pubDate\": \"2023-01-01T12:00:00Z\",\n      \"fetchDate\": \"2023-01-01T12:30:00Z\",\n      \"status\": \"normal\",\n      \"feedTitle\": \"Example Feed\",\n      \"feedCategory\": \"Technology\"\n    }\n  ],\n  \"success\": true\n}\n```\n\n### get_sources\n\nGet all available RSS feed sources.\n\n**Parameters:** None\n\n**Response:**\n\n```json\n{\n  \"sources\": [\n    {\n      \"id\": 1,\n      \"title\": \"Example Feed\",\n      \"category\": \"Technology\"\n    }\n  ],\n  \"success\": true\n}\n```\n\n### set_tag\n\nSet the status of an article (normal or favorite).\n\n**Parameters:**\n\n| Parameter | Type | Description | Required |\n|-----------|------|-------------|---------|\n| status | string | Article status (\"normal\" or \"favorite\") | Yes |\n| articleId | number | ID of the article to update | Yes |\n\n**Response:**\n\n```json\n{\n  \"success\": true,\n  \"message\": \"Article 1 status has been updated to favorite\"\n}\n```\n\n## License\n\nMIT\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "feeds",
        "mcp_rss",
        "rss",
        "rss feeds",
        "rss feed",
        "feed subscriptions"
      ],
      "category": "news-and-media"
    },
    "eluc1a--mcp-news": {
      "owner": "eluc1a",
      "name": "mcp-news",
      "url": "https://github.com/eluc1a/mcp-news",
      "imageUrl": "/freedevtools/mcp/pfp/eluc1a.webp",
      "description": "Provides access to the latest news articles from various categories and enables summarization of news content. Retrieves curated news data efficiently for informed decision-making and content generation.",
      "stars": 3,
      "forks": 1,
      "license": "No License",
      "language": "Python",
      "updated_at": "2025-08-27T08:59:52Z",
      "readme_content": "# news-mcp MCP server\n\nmcp news server\n\n## Components\n\n### Resources\n\nThe server exposes news articles stored in a database via a resource URI:\n- `news://{category}/{limit}`: Retrieves a list of the latest articles for a given category.\n  - `{category}`: Filters articles by category (e.g., `tech`, `data_science`, `news`). See tool description for full list.\n  - `{limit}` (optional, default 10): Specifies the maximum number of articles to return.\n- Each returned article includes title, link, published date, and source.\n\n### Prompts\n\nThe server currently does not expose any prompts. (The summarization logic exists internally but is not available via an MCP prompt).\n\n### Tools\n\nThe server implements one tool:\n- `summarize_news`: Retrieves raw news articles from the database, allowing the client (LLM) to summarize them.\n  - Takes optional `category` (string) and `limit` (integer, default 20) arguments.\n  - Returns a list of article dictionaries, each containing `id`, `title`, `link`, `published`, `source`, and `content`.\n  - Available categories: `tech`, `data_science`, `llm_tools`, `cybersecurity`, `linux`, `audio_dsp`, `startups`, `news`, `science`, `research`, `policy`.\n\n## Configuration\n\nThe server relies on a PostgreSQL database configured via the `DATABASE_URL` environment variable (defaults to `postgresql://localhost/mcp_news`).\n\nThe `news_gatherer.py` script (intended to be run separately/scheduled) populates the database from various RSS feeds.\n\nSummarization logic (internal, not exposed via MCP) uses the OpenAI API, configured via the `OPENAI_API_KEY` environment variable.\n\nOther configurations (via environment variables or defaults):\n- `LOOKBACK_HOURS`: How far back `news_gatherer.py` looks for new articles (default: 6).\n- `SUMMARY_WORD_TARGET`: Target word count for internal summarization (default: 500).\n- `MAX_ARTICLES_PER_SUMMARY`: Maximum articles included in one summary batch (default: 25).\n- `KEYWORD_FILTER`: Keywords used by internal summarization logic.\n\n## Quickstart\n\n### Install\n\n#### Claude Desktop\n\nOn MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n<details>\n  <summary>Development/Unpublished Servers Configuration</summary>\n  ```\n  \"mcpServers\": {\n    \"news-mcp\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"~/dev/news-mcp\",\n        \"run\",\n        \"news-mcp\"\n      ]\n    }\n  }\n  ```\n</details>\n\n<details>\n  <summary>Published Servers Configuration</summary>\n  ```\n  \"mcpServers\": {\n    \"news-mcp\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"news-mcp\"\n      ]\n    }\n  }\n  ```\n</details>\n\n## Development\n\n### Building and Publishing\n\nTo prepare the package for distribution:\n\n1. Sync dependencies and update lockfile:\n```bash\nuv sync\n```\n\n2. Build package distributions:\n```bash\nuv build\n```\n\nThis will create source and wheel distributions in the `dist/` directory.\n\n3. Publish to PyPI:\n```bash\nuv publish\n```\n\nNote: You'll need to set PyPI credentials via environment variables or command flags:\n- Token: `--token` or `UV_PUBLISH_TOKEN`\n- Or username/password: `--username`/`UV_PUBLISH_USERNAME` and `--password`/`UV_PUBLISH_PASSWORD`\n\n### Debugging\n\nSince MCP servers run over stdio, debugging can be challenging. For the best debugging\nexperience, we strongly recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector).\n\n\nYou can launch the MCP Inspector via [`npm`](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) with this command:\n\n```bash\nnpx @modelcontextprotocol/inspector uv --directory ~/dev/news-mcp run news-mcp \n```\n\n\nUpon launching, the Inspector will display a URL that you can access in your browser to begin debugging.",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "news",
        "curated",
        "content",
        "curated news",
        "news content",
        "news data"
      ],
      "category": "news-and-media"
    },
    "erithwik--mcp-hn": {
      "owner": "erithwik",
      "name": "mcp-hn",
      "url": "https://github.com/erithwik/mcp-hn",
      "imageUrl": "/freedevtools/mcp/pfp/erithwik.webp",
      "description": "Fetch stories, comments, and user information from Hacker News, allowing users to access trending and relevant content directly from the platform.",
      "stars": 53,
      "forks": 15,
      "license": "MIT License",
      "language": "Python",
      "updated_at": "2025-09-17T07:45:41Z",
      "readme_content": "# Hacker News MCP Server\n\n[![smithery badge](https://smithery.ai/badge/mcp-hn)](https://smithery.ai/server/mcp-hn)\n\nA Model Context Protocol (MCP) server that provides tools for fetching information from Hacker News.\n\n<a href=\"https://glama.ai/mcp/servers/e0rco8dfgt\"><img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/e0rco8dfgt/badge\" alt=\"mcp-hn MCP server\" /></a>\n\n## Tools\n\n- `get_stories` Fetching (top, new, ask_hn, show_hn) stories\n- `get_story_info` Fetching comments associated with a story\n- `search_stories` Searching for stories by query\n- `get_user_info` Fetching user info\n\n## Example Usage\n\nUse prompts like the following:\n\n```\nUser: Get the top stories of today\n  Output: Uses `get_stories` tool and returns a story about AI\nUser: What does the details of the story today that talks about the future of AI\n  Output: Uses `get_story_info` tool based on the results of the previous tool\nUser: What has the user `pg` been up to?\n  Output: Uses `get_user_info` tool and returns a summary of the user's activity\nUser: What does hackernews say about careers in AI?\n  Output: Uses `search_stories` tool and returns a summary of the comments\n```\n\nA more detailed example with the puppeteer MCP server:\n\n```\nUser: What are the top stories of today?\n  Output: Uses `get_stories` tool and returns a story about AI\nUser: Can you use the puppeteer tool to read the article about <AI> and also use the hackernews tool to view the comments and give me a summary of what the main comments are about the article?\n  Output: Uses puppeteer tool to read the article about AI and then uses the `get_story_info` hn tool to get the comments and returns a summary of the comments\n```\n\n## Quickstart\n\n### Installing via Smithery\n\nTo install Hacker News MCP Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/mcp-hn):\n\n```bash\nnpx -y @smithery/cli install mcp-hn --client claude\n```\n\n### Claude Desktop:\n\nUpdate the following:\n\nOn MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`\n\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\nWith the following for production:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-hn\": {\n      \"command\": \"uvx\",\n      \"args\": [\"mcp-hn\"]\n    }\n  }\n}\n```\n\n\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "news",
        "hacker",
        "erithwik",
        "hacker news",
        "media erithwik",
        "mcp hn"
      ],
      "category": "news-and-media"
    },
    "fred-em--headline-vibes": {
      "owner": "fred-em",
      "name": "headline-vibes",
      "url": "https://github.com/fred-em/headline-vibes",
      "imageUrl": "/freedevtools/mcp/pfp/fred-em.webp",
      "description": "Analyzes sentiment in news headlines from major US publications, providing sentiment scoring on a 0-10 scale and distributing headlines evenly across major sources. Includes features for date-based querying and natural language date parsing for user convenience.",
      "stars": 6,
      "forks": 8,
      "license": "No License",
      "language": "JavaScript",
      "updated_at": "2025-08-22T20:51:19Z",
      "readme_content": "# Headline Vibes Analysis MCP Server\n\nA Model Context Protocol server that analyzes sentiment in news headlines from major US publications. The server provides both a standard date-based interface and natural language date parsing for easier use.\n\n## Features\n\n- Analyzes up to 100 headlines per request\n- Even distribution of headlines across major US news sources\n- Sentiment scoring on a 0-10 scale (0 = most negative, 10 = most positive)\n- Natural language date parsing (e.g., \"yesterday\", \"last Friday\")\n- Detailed source distribution information\n- Sample headlines included in results\n\n## Prerequisites\n\n- Node.js v16 or higher\n- NewsAPI key (get one at https://newsapi.org)\n\n## Installation\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/fred-em/headline-vibes.git\ncd headline-vibes\n```\n\n2. Install dependencies:\n```bash\nnpm install\n```\n\n3. Build the server:\n```bash\nnpm run build\n```\n\n4. Configure your NewsAPI key in your MCP settings file:\n```json\n{\n  \"mcpServers\": {\n    \"headline-vibes\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/headline-vibes/build/index.mjs\"],\n      \"env\": {\n        \"NEWS_API_KEY\": \"your-api-key-here\"\n      },\n      \"disabled\": false,\n      \"autoApprove\": []\n    }\n  }\n}\n```\n\n## Available Tools\n\n### analyze_headlines\nAnalyze sentiment using natural language date input or specific dates.\n\nExample usage:\n```typescript\n// Using natural language\n{\n  \"name\": \"analyze_headlines\",\n  \"arguments\": {\n    \"input\": \"yesterday\"\n  }\n}\n\n// Or using specific dates\n{\n  \"name\": \"analyze_headlines\",\n  \"arguments\": {\n    \"input\": \"2025-02-11\"\n  }\n}\n```\n\nInput examples:\n- \"last Friday\"\n- \"3 days ago\"\n- \"March 10th\"\n- \"two weeks ago\"\n- \"2025-02-11\" (YYYY-MM-DD format also supported)\n\n## Response Format\n\nThe tool returns results in the following format:\n```json\n{\n  \"score\": \"6.50\",              // Normalized sentiment score (0-10)\n  \"synopsis\": \"Overall positive sentiment in today's headlines\",\n  \"headlines_analyzed\": 100,    // Number of headlines analyzed\n  \"sources_analyzed\": 12,       // Number of unique sources\n  \"source_distribution\": {      // Distribution of headlines by source\n    \"Reuters\": 10,\n    \"Associated Press\": 8,\n    \"CNN\": 9,\n    // ... etc\n  },\n  \"sample_headlines\": [         // Up to 5 sample headlines\n    \"Example headline 1\",\n    \"Example headline 2\",\n    // ... etc\n  ]\n}\n```\n\n## News Sources\n\nThe server pulls headlines from major US news sources including:\n- Associated Press\n- Reuters\n- CNN\n- Fox News\n- NBC News\n- ABC News\n- Wall Street Journal\n- Washington Post\n- USA Today\n- Bloomberg\n- Business Insider\n- Time\n\n## Error Handling\n\nThe server provides clear error messages for common issues:\n- Invalid date formats\n- Unparseable natural language queries\n- No headlines found for the specified date\n- API errors from NewsAPI\n\n## Development\n\nTo run the server in watch mode during development:\n```bash\nnpm run watch\n```\n\n## License\n\nMIT\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "sentiment",
        "headlines",
        "headline",
        "sentiment news",
        "headline vibes",
        "sentiment scoring"
      ],
      "category": "news-and-media"
    },
    "imprvhub--mcp-claude-hackernews": {
      "owner": "imprvhub",
      "name": "mcp-claude-hackernews",
      "url": "https://github.com/imprvhub/mcp-claude-hackernews",
      "imageUrl": "/freedevtools/mcp/pfp/imprvhub.webp",
      "description": "Seamlessly interact with Hacker News to browse the latest, top, and best stories, view detailed story information, and read comments with improved formatting for enhanced readability.",
      "stars": 7,
      "forks": 6,
      "license": "Mozilla Public License 2.0",
      "language": "TypeScript",
      "updated_at": "2025-09-15T07:41:41Z",
      "readme_content": "# MCP Claude Hacker News\n[![Verified on MseeP](https://mseep.ai/badge.svg)](https://mseep.ai/app/63f8ec05-a890-4a4d-9d8d-bea3c9a05c54) [![Trust Score](https://archestra.ai/mcp-catalog/api/badge/quality/imprvhub/mcp-claude-hackernews)](https://archestra.ai/mcp-catalog/imprvhub__mcp-claude-hackernews)\n[![smithery badge](https://smithery.ai/badge/@imprvhub/mcp-claude-spotify)](https://smithery.ai/server/@imprvhub/mcp-claude-hackernews)\n\n\n<table style=\"border-collapse: collapse; width: 100%; table-layout: fixed;\">\n<tr>\n<td style=\"padding: 15px; vertical-align: middle; border: none; text-align: center;\">\n  <a href=\"https://mseep.ai/app/imprvhub-mcp-claude-hackernews\">\n    <img src=\"https://mseep.net/pr/imprvhub-mcp-claude-hackernews-badge.png\" alt=\"MseeP.ai Security Assessment Badge\" />\n  </a>\n</td>  \n<td style=\"width: 40%; padding: 15px; vertical-align: middle; border: none;\">An integration that allows Claude Desktop to interact with Hacker News using the Model Context Protocol (MCP).</td>\n<td style=\"width: 60%; padding: 0; vertical-align: middle; border: none; min-width: 300px; text-align: center;\"><a href=\"https://glama.ai/mcp/servers/@imprvhub/mcp-claude-hackernews\">\n  <img style=\"max-width: 100%; height: auto; min-width: 300px;\" src=\"https://glama.ai/mcp/servers/@imprvhub/mcp-claude-hackernews/badge\" alt=\"mcp-claude-hackernews MCP server\" />\n</a></td>\n</tr>\n</table>\n\n\n## Features\n\n- Browse latest stories from Hacker News\n- View top and best-rated stories\n- Get story details\n- Read comments for stories\n- Clean formatting of Hacker News content for better readability\n\n## Demo\n\n<p>\n  <a href=\"https://www.youtube.com/watch?v=SmPD6MLifJo\">\n    \n  </a>\n</p>\n\n## Requirements\n\n- Node.js 16 or higher\n- Claude Desktop\n- Internet connection to access Hacker News API\n\n## Installation\n\n### Installing Manually\n1. Clone or download this repository:\n```bash\ngit clone https://github.com/imprvhub/mcp-claude-hackernews\ncd mcp-claude-hackernews\n```\n\n2. Install dependencies:\n```bash\nnpm install\n```\n\n3. Build the project:\n```bash\nnpm run build\n```\n\n## Running the MCP Server\n\nThere are two ways to run the MCP server:\n\n### Option 1: Running manually\n\n1. Open a terminal or command prompt\n2. Navigate to the project directory\n3. Run the server directly:\n\n```bash\nnode build/index.js\n```\n\nKeep this terminal window open while using Claude Desktop. The server will run until you close the terminal.\n\n### Option 2: Auto-starting with Claude Desktop (recommended for regular use)\n\nThe Claude Desktop can automatically start the MCP server when needed. To set this up:\n\n#### Configuration\n\nThe Claude Desktop configuration file is located at:\n\n- **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`\n- **Windows**: `%APPDATA%\\Claude\\claude_desktop_config.json`\n- **Linux**: `~/.config/Claude/claude_desktop_config.json`\n\nEdit this file to add the Hacker News MCP configuration. If the file doesn't exist, create it:\n\n```json\n{\n  \"mcpServers\": {\n    \"hackerNews\": {\n      \"command\": \"node\",\n      \"args\": [\"ABSOLUTE_PATH_TO_DIRECTORY/mcp-claude-hackernews/build/index.js\"]\n    }\n  }\n}\n```\n\n**Important**: Replace `ABSOLUTE_PATH_TO_DIRECTORY` with the **complete absolute path** where you installed the MCP\n  - macOS/Linux example: `/Users/username/mcp-claude-hackernews`\n  - Windows example: `C:\\\\Users\\\\username\\\\mcp-claude-hackernews`\n\nIf you already have other MCPs configured, simply add the \"hackerNews\" section inside the \"mcpServers\" object. Here's an example of a configuration with multiple MCPs:\n\n```json\n{\n  \"mcpServers\": {\n    \"otherMcp1\": {\n      \"command\": \"...\",\n      \"args\": [\"...\"]\n    },\n    \"otherMcp2\": {\n      \"command\": \"...\",\n      \"args\": [\"...\"]\n    },\n    \"hackerNews\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"ABSOLUTE_PATH_TO_DIRECTORY/mcp-claude-hackernews/build/index.js\"\n      ]\n    }\n  }\n}\n```\n\nThe MCP server will automatically start when Claude Desktop needs it, based on the configuration in your `claude_desktop_config.json` file.\n\n## Usage\n\n1. Restart Claude Desktop after modifying the configuration\n2. In Claude, use the Hacker News tools to interact with Hacker News\n3. The MCP server runs as a child process managed by Claude Desktop\n\n## Available Tools\n\nThe Hacker News MCP provides **5 specialized tools** for different functions:\n\n| Tool | Description | Parameters | Example Usage |\n|------|-------------|------------|---------------|\n| `hn_latest` | Get the most recent stories from Hacker News | `limit`: Optional number of stories (1-50, default: 10) | Get 20 latest stories |\n| `hn_top` | Get the top-ranked stories from Hacker News | `limit`: Optional number of stories (1-50, default: 10) | Get 15 top stories |\n| `hn_best` | Get the best stories from Hacker News | `limit`: Optional number of stories (1-50, default: 10) | Get 25 best stories |\n| `hn_story` | Get detailed information about a specific story | `story_id`: Required story ID (number) | Get story details by ID |\n| `hn_comments` | Get comments for a story | `story_id`: Story ID (number) OR `story_index`: Index from last list (1-based) | Get comments by story ID or index |\n\n### Tool Parameters Details\n\n#### `hn_latest`, `hn_top`, `hn_best`\n- **`limit`** (optional): Number of stories to fetch\n  - Type: Number\n  - Range: 1-50\n  - Default: 10\n\n#### `hn_story`\n- **`story_id`** (required): The ID of the story to fetch\n  - Type: Number\n  - Example: 12345678\n\n#### `hn_comments`\n- **`story_id`** (optional): The ID of the story to get comments for\n  - Type: Number\n  - Example: 12345678\n- **`story_index`** (optional): The index of the story from the last fetched list\n  - Type: Number (1-based)\n  - Example: 3 (for the 3rd story in the last list)\n\n*Note: For `hn_comments`, you must provide either `story_id` OR `story_index`*\n\n## Example Usage\n\nHere are various examples of how to use the Hacker News MCP with Claude:\n\n### Direct Tool Usage:\n\n```\n\"Use hn_latest to get 20 recent stories\"\n\"Use hn_top with limit 15 to get top stories\"\n\"Use hn_best to get 25 best stories\"\n\"Use hn_story with story_id 29384756 to get story details\"\n\"Use hn_comments with story_index 3 to get comments for the 3rd story\"\n\"Use hn_comments with story_id 12345678 to get comments for that story\"\n```\n\n### Natural Language Queries:\n\nYou can also interact with the MCP using natural language. Claude will interpret these requests and use the appropriate tools:\n\n- \"Show me the top 30 stories on Hacker News today\"\n- \"What are the 40 latest posts on Hacker News?\"\n- \"I'd like to see the 20 best articles from Hacker News\"\n- \"Can you fetch me 30 recent tech news stories from Hacker News?\"\n- \"Tell me what's the top 50 trending topics on Hacker News\"\n- \"Show me 20 Hacker News stories about machine learning\"\n- \"Get me the 40 most recent Hacker News headlines\"\n- \"What are the 30 most active discussions on Hacker News right now?\"\n- \"I'm interested in reading the 40 most popular Hacker News articles this week\"\n- \"Show me a list of 20 best programming articles from Hacker News\"\n- \"Get the comments for story number 5 from the last list\"\n- \"Show me the details of story ID 12345678\"\n\n### Language Translation Requests:\n\nYou can request Hacker News content to be translated into different languages:\n\n- \"Show me the top 30 stories on Hacker News today in Spanish\"\n- \"Get the 20 latest Hacker News posts and translate them to French\"\n- \"I'd like to see the 40 best articles from Hacker News in German\"\n- \"Show me 30 recent Hacker News stories translated to Japanese\"\n- \"Get the top 20 Hacker News articles and present them in Portuguese\"\n\n## Troubleshooting\n\n### \"Server disconnected\" error\nIf you see the error \"MCP Hacker News: Server disconnected\" in Claude Desktop:\n\n1. **Verify the server is running**:\n   - Open a terminal and manually run `node build/index.js` from the project directory\n   - If the server starts successfully, use Claude while keeping this terminal open\n\n2. **Check your configuration**:\n   - Ensure the absolute path in `claude_desktop_config.json` is correct for your system\n   - Double-check that you've used double backslashes (`\\\\`) for Windows paths\n   - Verify you're using the complete path from the root of your filesystem\n\n3. **Try the auto-start option**:\n   - Set up the auto-start script for your operating system as described in the \"Setting up auto-start scripts\" section\n   - This ensures the server is always running when you need it\n\n### Tools not appearing in Claude\nIf the Hacker News tools don't appear in Claude:\n- Make sure you've restarted Claude Desktop after configuration\n- Check the Claude Desktop logs for any MCP communication errors\n- Ensure the MCP server process is running (run it manually to confirm)\n- Verify that the MCP server is correctly registered in the Claude Desktop MCP registry\n\n### Checking if the server is running\nTo check if the server is running:\n\n- **Windows**: Open Task Manager, go to the \"Details\" tab, and look for \"node.exe\"\n- **macOS/Linux**: Open Terminal and run `ps aux | grep node`\n\nIf you don't see the server running, start it manually or use the auto-start method.\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## License\n\nThis project is licensed under the Mozilla Public License 2.0 - see the [LICENSE](https://github.com/imprvhub/mcp-claude-hackernews/blob/main/LICENSE) file for details.\n\n## Related Links\n\n- [Model Context Protocol](https://modelcontextprotocol.io/)\n- [Hacker News API](https://github.com/HackerNews/API)\n- [Claude Desktop](https://claude.ai/download)\n- [MCP Series](https://github.com/mcp-series)",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "hackernews",
        "hacker",
        "imprvhub",
        "hackernews seamlessly",
        "hacker news",
        "claude hackernews"
      ],
      "category": "news-and-media"
    },
    "juhemcp--jnews-mcp-server": {
      "owner": "juhemcp",
      "name": "jnews-mcp-server",
      "url": "https://github.com/juhemcp/jnews-mcp-server",
      "imageUrl": "/freedevtools/mcp/pfp/juhemcp.webp",
      "description": "Fetches the latest trending news headlines along with detailed content across various categories such as recommendations, domestic, technology, and sports. Provides real-time news updates for easier integration into applications.",
      "stars": 0,
      "forks": 4,
      "license": "No License",
      "language": "Python",
      "updated_at": "2025-03-18T12:21:48Z",
      "readme_content": "# Juhe News MCP Server\n\n‰∏Ä‰∏™Êèê‰æõÊñ∞ÈóªÂ§¥Êù°‰ø°ÊÅØÂäüËÉΩÁöÑÊ®°Âûã‰∏ä‰∏ãÊñáÂçèËÆÆÔºàModel Context ProtocolÔºâÊúçÂä°Âô®„ÄÇËØ•ÊúçÂä°Âô®‰ΩøÂ§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÔºàLLMsÔºâËÉΩÂ§üËé∑ÂèñÂΩìÂâçÊúÄÊñ∞ÁöÑÁÉ≠ÁÇπÊñ∞ÈóªÂ§¥Êù°ÔºàÂåÖÊã¨ÔºöÊé®Ëçê„ÄÅÂõΩÂÜÖ„ÄÅÁßëÊäÄ„ÄÅ‰ΩìËÇ≤Á≠âÁ±ªÂûãÔºâÂèäËØ¶ÁªÜÂÜÖÂÆπ‰ø°ÊÅØ„ÄÇ\n\n\n## Components\n\n### Tools\n\nÊúçÂä°Âô®ÂÆûÁé∞‰∫Ü‰∏§‰∏™Â∑•ÂÖ∑:\n\n- get_news_list: Ê†πÊçÆÊñ∞ÈóªÁ±ªÂûãËé∑Âèñ‰ªäÊó•ÁÉ≠ÁÇπÊñ∞ÈóªÂ§¥Êù°\n  - ÈúÄË¶Å‰º†ÂÖ• \"type\"ÔºàÊñ∞ÈóªÁ±ªÂûãÔºâ‰Ωú‰∏∫ÈÄâÂ°´ÁöÑÂ≠óÁ¨¶‰∏≤ÂèÇÊï∞„ÄÇ\n```\nasync def get_news_list(type: str = \"top\", page: int = 1, page_size: int = 20) -> list[types.TextContent | types.ImageContent | types.EmbeddedResource]:\n```\n\n- get_news_content: Ê†πÊçÆÊñ∞ÈóªÁ±ªÂûãËé∑Âèñ‰ªäÊó•ÁÉ≠ÁÇπÊñ∞ÈóªÂ§¥Êù°\n  - ÈúÄË¶Å‰º†ÂÖ• \"uniquekey\"ÔºàÊñ∞ÈóªidÔºâ‰Ωú‰∏∫ÂøÖÈ°ªÁöÑÂ≠óÁ¨¶‰∏≤ÂèÇÊï∞„ÄÇ\n```\nasync def get_news_content(uniquekey: str) -> list[types.TextContent | types.ImageContent | types.EmbeddedResource]:\n```\n\n\n\n## Install\nThis server requires Python 3.10 or higher. Install dependencies using uv (recommended) or pip\n\n### Using uv (recommended)\nWhen using [uv](https://docs.astral.sh/uv/) no specific installation is needed. We will use [uvx](https://docs.astral.sh/uv/guides/tools/) to directly run jnews-mcp-server.\n\n```bash\nuvx jnews-mcp-server\n```\n\n### Using PIP\nAlternatively you can install jnews-mcp-server via pip:\n```\npip install jnews-mcp-server\n```\nAfter installation, you can run it as a script using:\n```\npython -m jnews_mcp_server\n```\n\n### Configuration\n\n#### Environment Variables\n`JUHE_NEWS_API_KEY`: ËÅöÂêàÊï∞ÊçÆÁöÑÊñ∞ÈóªÂ§¥Êù°APIÂØÜÈí•„ÄÇËé∑ÂèñÔºö[https://www.juhe.cn/docs/api/id/235](https://www.juhe.cn/docs/api/id/235)\n```\nJUHE_NEWS_API_KEY=your_api_key\n```\n\n#### Claude Desktop\n\n- On MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`\n- On Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n<details>\n  <summary>Using uvx</summary>\n\n  ```\n  \"mcpServers\": {\n    \"jnews-mcp-server\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"jnews-mcp-server\"\n      ],\n      \"env\": {\n        \"JUHE_NEWS_API_KEY\": \"your_api_key\"\n      }\n    }\n  }\n  ```\n</details>\n\n<details>\n  <summary>Using pip installation</summary>\n\n  ```\n  \"mcpServers\": {\n    \"jnews-mcp-server\": {\n      \"command\": \"python\",\n      \"args\": [\n        \"-m\",\n        \"jnews_mcp_server\"\n      ],\n      \"env\": {\n        \"JUHE_NEWS_API_KEY\": \"your_api_key\"\n      }\n    }\n  }\n  ```\n</details>\n\n## Debugging\nYou can use the MCP inspector to debug the server. For uvx installations:\n\n```bash\nnpx @modelcontextprotocol/inspector uvx jnews-mcp-server \n```\n\nOr if you've installed the package in a specific directory or are developing on it:\n\n```bash\ncd path/to/servers/src/jnews-mcp-server\nnpx @modelcontextprotocol/inspector uv run jnews-mcp-server\n```\n\n## Examples of Questions for Cline\n1. \"‰ªäÊó•ÊúâÂì™‰∫õÁÉ≠ÁÇπÊñ∞Èóª?\"\n2. \"ÂΩìÂâç‰ΩìËÇ≤ÁÉ≠ÁÇπÂ§¥Êù°?\"\n3. \"Á¨¨5Êù°Êñ∞ÈóªÁöÑËØ¶ÁªÜÂÜÖÂÆπ\"",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "jnews",
        "mcp",
        "news",
        "jnews mcp",
        "juhemcp jnews",
        "mcp server"
      ],
      "category": "news-and-media"
    },
    "kukapay--blockbeats-mcp": {
      "owner": "kukapay",
      "name": "blockbeats-mcp",
      "url": "https://github.com/kukapay/blockbeats-mcp",
      "imageUrl": "/freedevtools/mcp/pfp/kukapay.webp",
      "description": "Fetch the latest blockchain news and in-depth articles with ease, providing real-time information and insights. Supports multi-language retrieval for enhanced audience engagement.",
      "stars": 8,
      "forks": 5,
      "license": "MIT License",
      "language": "Python",
      "updated_at": "2025-08-28T02:05:28Z",
      "readme_content": "# BlockBeats MCP Server\n\nAn MCP server that delivers blockchain news and in-depth articles from BlockBeats for AI agents.\n\n[![Discord](https://img.shields.io/discord/1353556181251133481?cacheSeconds=3600)](https://discord.gg/aRnuu2eJ)\n![GitHub License](https://img.shields.io/github/license/kukapay/blockbeats-mcp)\n![Python Version](https://img.shields.io/badge/python-3.10+-blue)\n![Status](https://img.shields.io/badge/status-active-brightgreen.svg)\n\n\n## Features\n\n- **Fast News Retrieval**: Fetch the latest blockchain fast news articles using the `get_latest_news` tool.\n- **In-Depth Articles**: Access detailed blockchain articles with the `get_latest_articles` tool.\n- **Multi-Language Support**: Supports English (`en`), Simplified Chinese (`cn`), and Traditional Chinese (`cht`).\n\n## Installation\n\n### Installing via Smithery\n\nTo install BlockBeats News for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@kukapay/blockbeats-mcp):\n\n```bash\nnpx -y @smithery/cli install @kukapay/blockbeats-mcp --client claude\n```\n\n### Manual Installation\n1. **Clone the Repository**:\n   ```bash\n   git clone https://github.com/kukapay/blockbeats-mcp.git\n   cd blockbeats-mcp\n   ```\n\n2. **Install Dependencies**:\n   ```bash\n   pip install mcp[cli] httpx\n   ```\n\n3. **Run the Server**:\n   - For development mode (hot reload enabled):\n     ```bash\n     mcp dev main.py\n     ```\n   - For production use with Claude Desktop:\n     ```bash\n     mcp install main.py --name \"BlockBeats News\"\n     ```\n     \n## Usage\n\nThe server provides two main tools:\n\n### `get_latest_news`\nFetches the latest blockchain fast news articles from BlockBeats' `open-api/open-flash` endpoint.\n\n**Parameters**:\n- `size` (int): Number of articles per page (default: 5).\n- `max_pages` (int): Maximum number of pages to fetch (default: 1).\n- `type` (str): News type filter, e.g., `'push'` for important news (default: `'push'`).\n- `lang` (str): Language of the news (`'en'` for English, `'cn'` for Simplified Chinese, `'cht'` for Traditional Chinese; default: `'en'`).\n\n**Example**:\n- **Input**: \"Get me the 2 latest blockchain news articles in English from one page.\"\n- **Output**:\n  ```\n  ID: 288909\n  Title: Bitcoin Falls Below $75,000, 24-Hour Drop Widens to 5.75%\n  Content: <p>BlockBeats News, April 9 ‚Äì According to HTX market data, Bitcoin has fallen below $75,000, currently priced at $74,854, with a 24-hour drop widening to 5.75%.</p>\n  Link: https://m.theblockbeats.info/flash/288909\n  Created: 2025-04-09 15:26:29\n\n  ID: 288908\n  Title: Ethereum Drops Below $1,400, Down 9.36% in 24 Hours\n  Content: <p>BlockBeats News, April 9 ‚Äì Per HTX market data, Ethereum has fallen below $1,400, now at $1,398, with a 24-hour decline of 9.36%.</p>\n  Link: https://m.theblockbeats.info/flash/288908\n  Created: 2025-04-09 15:22:24\n  ```\n\n### `get_latest_articles`\nFetches in-depth blockchain articles from BlockBeats' `open-api/open-information` endpoint.\n\n**Parameters**:\n- `size` (int): Number of articles per page (default: 5).\n- `max_pages` (int): Maximum number of pages to fetch (default: 1).\n- `type` (str): Article type filter, e.g., `'push'` for important articles (default: `'push'`).\n- `lang` (str): Language of the articles (`'en'` for English, `'cn'` for Simplified Chinese, `'cht'` for Traditional Chinese; default: `'en'`).\n\n**Example**:\n- **Input**: \"Show me one in-depth blockchain article in English from the first page with push type.\"\n- **Output**:\n  ```\n  Title: Solo Bitcoin Miners Are Winning More Blocks Lately‚ÄîWhat Gives?\n  Description: Using a $180 Bitaxe miner with a 1.2 TH/s hash rate, the daily chance of mining a block is just 0.00068390%.\n  Content: <blockquote>Original Title: Solo Bitcoin Miners Are Winning More Blocks Lately‚ÄîWhat Gives?</blockquote><blockquote>Author: Mat Di Salvo, Decrypt</blockquote><blockquote>Translated by: Lila, BlockBeats</blockquote><p><br></p><p>Last week, another solo Bitcoin miner successfully mined a block, earning a reward of 3.125 BTC, worth nearly $260,000 including transaction fees. This is just one of several recent wins for solo miners in recent months.</p><p><br></p><p>Was this miner just lucky? Is solo mining becoming more common? Can an average person with a basic miner and modest hash power take on the big mining firms?</p><p><br></p><p>The answers vary. While solo miners‚Äîhere referring to individual enthusiasts or small, low-profile groups‚Äîhave indeed been mining blocks more often recently, the increase is modest and unlikely to surge dramatically.</p><p><br></p><p><img src=\"https://image.theblockbeats.info/file_v6/20250408/e870c395-deef-48de-b133-0a5ea85053d5.png?x-oss-process=image/quality,q_50/format,webp\" alt=\"\" data-href=\"\" style=\"\"/></p><p><br></p><p>Scott Norris, CEO of solo mining firm Optiminer, put it bluntly: solo mining is still like ‚Äúbuying a lottery ticket.‚Äù</p><p><br></p>...\n  Link: https://m.theblockbeats.info/news/57650\n  Created: 2025-04-08 23:30:00\n  ```\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "blockchain",
        "news",
        "blockbeats",
        "blockchain news",
        "kukapay blockbeats",
        "media kukapay"
      ],
      "category": "news-and-media"
    },
    "kukapay--crypto-news-mcp": {
      "owner": "kukapay",
      "name": "crypto-news-mcp",
      "url": "https://github.com/kukapay/crypto-news-mcp",
      "imageUrl": "/freedevtools/mcp/pfp/kukapay.webp",
      "description": "Fetch real-time cryptocurrency news and summaries while enabling search functionality for specific articles based on keywords or cryptocurrencies. The server provides access to the latest headlines and related data through an API interface.",
      "stars": 9,
      "forks": 5,
      "license": "MIT License",
      "language": "Python",
      "updated_at": "2025-08-25T14:34:14Z",
      "readme_content": "# Crypto News MCP Server\n\nAn MCP server that provides real-time cryptocurrency news sourced from [NewsData](https://newsdata.io/) for AI agents.\n\n![GitHub](https://img.shields.io/github/license/kukapay/crypto-news-mcp) \n![GitHub last commit](https://img.shields.io/github/last-commit/kukapay/crypto-news-mcp) \n![Python](https://img.shields.io/badge/python-3.10%2B-blue)\n[![smithery badge](https://smithery.ai/badge/@kukapay/crypto-news-mcp)](https://smithery.ai/server/@kukapay/crypto-news-mcp)\n\n## Features\n\n- **Tool: Latest News Headlines** - Fetch the most recent cryptocurrency news headlines.\n- **Tool: Crypto News Search** - Search for news articles by cryptocurrency or keyword with pagination support using the `nextPage` API feature.\n- **Prompt: News Summary** - Generate a prompt to summarize news for a given cryptocurrency or topic.\n\n## Prerequisites\n\n- Python 3.10+\n- A [Newsdata.io API key](https://newsdata.io/register?ref=kukapay) \n- Git (for cloning the repository)\n\n## Installation\n\n### Installing via Smithery\n\nTo install Crypto News for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@kukapay/crypto-news-mcp):\n\n```bash\nnpx -y @smithery/cli install @kukapay/crypto-news-mcp --client claude\n```\n\n1. **Clone the Repository**:\n   ```bash\n   git clone https://github.com/kukapay/crypto-news-mcp.git\n   cd crypto-news-mcp\n   ```\n\n2. **Install Dependencies**:\n   ```bash\n   pip install mcp[cli] httpx python-dotenv\n   ```\n   \n4. **Install the server as a plugin for Claude Desktop**:\n    ```bash\n    mcp install main.py --name \"CryptoNews\"\n    ```\n\n    Or configure MCP-compatible clients manually:\n    ```\n    {\n      \"mcpServers\": { \n        \"Crypto News\": { \n          \"command\": \"python\", \n          \"args\": [ \"path/to/crypto-news-mcp/main.py\"],\n          \"env\": {\n            \"NEWS_API_KEY\": \"your_newsdata_api_key_here\"\n          }\n        } \n      }\n    }\n    ```\n\n## Available Tools and Prompts\n\n1. **Tool: `get_latest_news`**  \n   Fetches the latest cryptocurrency news headlines.\n   - **Usage**: Call `get_latest_news()` in an MCP client.\n   - **Output**: A string of headlines with publication dates.\n   - **Example**:\n     ```\n     Bitcoin Price Surges to New High (Published: 2025-04-06T12:00:00Z)\n     Ethereum ETF Approval Rumors Grow (Published: 2025-04-06T10:30:00Z)\n     ```\n\n2. **Tool: `get_crypto_news`**  \n   Searches for news articles by keyword with pagination support.\n   - **Parameters**:\n     - `query (str)`: The cryptocurrency or keyword (e.g., \"bitcoin\").\n     - `max_pages (int, optional)`: Number of pages to fetch (default: 1).\n   - **Usage**: Call `get_crypto_news(query=\"bitcoin\", max_pages=2)`.\n   - **Output**: A formatted string with article titles, dates, and descriptions.\n   - **Example**:\n     ```\n     Title: Bitcoin Hits $70K\n     Date: 2025-04-06T12:00:00Z\n     Description: Bitcoin surged past $70,000 amid bullish market trends.\n\n     Title: Bitcoin Mining Report\n     Date: 2025-04-06T09:00:00Z\n     Description: New report highlights energy usage in BTC mining.\n     ```\n\n3. **Prompt: `summarize_news`**  \n   Generates a prompt for summarizing news about a specific topic.\n   - **Parameters**:\n     - `query (str)`: The cryptocurrency or keyword.\n   - **Usage**: Call `summarize_news(query=\"ethereum\")`.\n   - **Output**: A prompt string for an LLM to process.\n   - **Example**:\n     ```\n     Please summarize the latest news about ethereum based on the following data:\n\n     {{{{ get_crypto_news(\"ethereum\") }}}}\n     ```\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "kukapay",
        "crypto",
        "cryptocurrencies",
        "kukapay crypto",
        "crypto news",
        "cryptocurrency news"
      ],
      "category": "news-and-media"
    },
    "manimohans--verge-news-mcp": {
      "owner": "manimohans",
      "name": "verge-news-mcp",
      "url": "https://github.com/manimohans/verge-news-mcp",
      "imageUrl": "/freedevtools/mcp/pfp/manimohans.webp",
      "description": "Fetch and search news articles from The Verge's RSS feed, enabling access to both today's news and a random selection of articles from the past week.",
      "stars": 3,
      "forks": 4,
      "license": "MIT License",
      "language": "TypeScript",
      "updated_at": "2025-08-26T03:26:42Z",
      "readme_content": "# The Verge News MCP Server\n\n[![smithery badge](https://smithery.ai/badge/@manimohans/verge-news-mcp)](https://smithery.ai/server/@manimohans/verge-news-mcp)\n\nAn MCP server that provides tools to fetch and search news from The Verge's RSS feed.\n\n<a href=\"https://glama.ai/mcp/servers/n6lbwdnbxa\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/n6lbwdnbxa/badge\" alt=\"The Verge News Server MCP server\" />\n</a>\n\n## Features\n\n- Fetch today's news from The Verge\n- Fetch a random selection of news from The Verge's past week\n- Search for news articles by keyword\n\n## Installation\n\n```bash\n# Clone the repository\ngit clone https://github.com/manimohans/verge-news-mcp.git\ncd verge-news-mcp\n\n# Install dependencies\nnpm install\n\n# Build the project\nnpm run build\n```\n\n## Usage\n\n### Running the server\n\n```bash\nnpm start\n```\n\n### Using with Claude for Desktop\n\n1. Install [Claude for Desktop](https://claude.ai/download)\n2. Open your Claude for Desktop App configuration at:\n   - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n   - Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n\n3. Add the following configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"verge-news\": {\n      \"command\": \"node\",\n      \"args\": [\"/absolute/path/to/verge-news-mcp/build/index.js\"]\n    }\n  }\n}\n```\n\n4. Restart Claude for Desktop\n\n### Using with Smithery\n\nYou can also use this MCP server with [Smithery](https://smithery.dev/), which allows you to easily share and use MCP servers:\n\n1. Make sure you have Smithery installed:\n```bash\nnpm install -g @anthropic-ai/smithery\n```\n\n2. To use this server via Smithery, run:\n```bash\nsmithery use https://github.com/manimohans/verge-news-mcp\n```\n\n3. Once installed, you can use it with Claude or any other MCP-compatible application.\n\n#### Smithery Configuration\n\nThis repository includes the necessary configuration files for Smithery:\n\n- `Dockerfile`: Defines how to build the Docker container for the MCP server\n- `smithery.yaml`: Configures the MCP server for Smithery, including its capabilities\n\nFor more information about Smithery configuration, see the [Smithery documentation](https://smithery.ai/docs/config).\n\n### Available Tools\n\n#### get-daily-news\n\nFetches the latest news articles from The Verge published in the last 24 hours.\n\nExample query: \"What's in the news today from The Verge?\"\n\n#### get-weekly-news\n\nFetches news articles from The Verge published in the last 7 days.\n\nExample query: \"Show me The Verge's news from the past week.\"\n\n**Note:** This tool randomly selects 10 news items from the past week, providing variety each time it's used.\n\n#### search-news\n\nSearches for news articles containing a specific keyword.\n\nParameters:\n- `keyword`: The term to search for\n- `days` (optional): Number of days to look back (default: 30)\n\nExample query: \"Find news articles about AI from The Verge.\"\n\n## Development\n\n```bash\n# Run in development mode\nnpm run dev\n```\n\n## License\n\nISC",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "rss",
        "verge",
        "news",
        "verge rss",
        "verge news",
        "search news"
      ],
      "category": "news-and-media"
    },
    "meicanhong--meicanhong": {
      "owner": "meicanhong",
      "name": "meicanhong",
      "url": "https://github.com/meicanhong/meicanhong",
      "imageUrl": "/freedevtools/mcp/pfp/meicanhong.webp",
      "description": "Access a collection of articles and personal reflections across various topics, facilitating community engagement through comments and discussions. It serves as a platform for discovering diverse perspectives and ideas.",
      "stars": 0,
      "forks": 0,
      "license": "No License",
      "language": "",
      "updated_at": "2023-03-23T15:39:30Z",
      "readme_content": "\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "meicanhong",
        "articles",
        "discussions",
        "media meicanhong",
        "meicanhong meicanhong",
        "meicanhong access"
      ],
      "category": "news-and-media"
    },
    "mengjian-github--deepseek-newsletter": {
      "owner": "mengjian-github",
      "name": "deepseek-newsletter",
      "url": "https://github.com/mengjian-github/deepseek-newsletter",
      "imageUrl": "/freedevtools/mcp/pfp/mengjian-github.webp",
      "description": "Collects and organizes information about the DeepSeek language model, presenting updates and insights in an e-book format. Features include compiling weekly updates and monthly summaries on technical progress, application cases, comparisons, and community news.",
      "stars": 1,
      "forks": 1,
      "license": "No License",
      "language": "HTML",
      "updated_at": "2025-06-12T05:53:24Z",
      "readme_content": "# DeepSeek Â∞èÊä•Á´•\n\nËøôÊòØ‰∏Ä‰∏™ÂÖ≥‰∫éDeepSeekÂ§ßËØ≠Ë®ÄÊ®°ÂûãÁöÑÂ∞èÊä•Á´•È°πÁõÆÔºåÊó®Âú®Êî∂ÈõÜÂíåÊï¥ÁêÜDeepSeekÁõ∏ÂÖ≥ÁöÑÈáçË¶Å‰ø°ÊÅØÂíåÊõ¥Êñ∞Ôºå‰ª•ÁîµÂ≠ê‰π¶ÁöÑÂΩ¢ÂºèÂëàÁé∞„ÄÇ\n\n## ÈáçË¶ÅÈáåÁ®ãÁ¢ë\n\nüéâ ÈáçÂ§ßÁ™ÅÁ†¥ÔºÅ„ÄäDeepSeekÊûÅÁÆÄÂÖ•Èó®‰∏éÂ∫îÁî®„ÄãÂõæ‰π¶ÈîÄÈáèÁ™ÅÁ†¥70‰∏áÂÜåÔºÅÊÑüË∞¢ÂπøÂ§ßËØªËÄÖÁöÑÊîØÊåÅ‰∏éÂéöÁà±„ÄÇ\n\n## È°πÁõÆÁªìÊûÑ\n\n```\ndeepseek-newsletter/\n‚îú‚îÄ‚îÄ README.md           # È°πÁõÆËØ¥ÊòéÊñáÊ°£\n‚îú‚îÄ‚îÄ articles/          # ÊñáÁ´†Ê∫êÊñá‰ª∂ÁõÆÂΩï\n‚îÇ   ‚îú‚îÄ‚îÄ 2024-03/      # ÊåâÊúà‰ªΩÁªÑÁªáÁöÑÊñáÁ´†\n‚îÇ   ‚îî‚îÄ‚îÄ templates/    # ÊñáÁ´†Ê®°Êùø\n‚îú‚îÄ‚îÄ books/            # ÁîüÊàêÁöÑÁîµÂ≠ê‰π¶ÁõÆÂΩï\n‚îú‚îÄ‚îÄ scripts/          # Â∑•ÂÖ∑ËÑöÊú¨\n‚îî‚îÄ‚îÄ assets/          # ÂõæÁâáÁ≠âËµÑÊ∫êÊñá‰ª∂\n```\n\n## ÂÜÖÂÆπËåÉÂõ¥\n\nÊú¨È°πÁõÆÂ∞ÜÊî∂ÈõÜ‰ª•‰∏ãÊñπÈù¢ÁöÑÂÜÖÂÆπÔºö\n\n1. DeepSeekÊ®°ÂûãÁöÑÊäÄÊúØÁâπÁÇπÂíåËøõÂ±ï\n2. DeepSeekÁöÑÂ∫îÁî®Ê°à‰æãÂíåÊúÄ‰Ω≥ÂÆûË∑µ\n3. ‰∏éÂÖ∂‰ªñÊ®°ÂûãÁöÑÂØπÊØîÂàÜÊûê\n4. Á§æÂå∫Âä®ÊÄÅÂíåÊõ¥Êñ∞‰ø°ÊÅØ\n5. ‰ΩøÁî®ÊïôÁ®ãÂíåÊäÄÂ∑ß\n\n## Êõ¥Êñ∞ËÆ°Âàí\n\n- ÊØèÂë®Êõ¥Êñ∞ÔºöÊî∂ÈõÜÊï¥ÁêÜÂΩìÂë®ÊúÄÈáçË¶ÅÁöÑDeepSeekÁõ∏ÂÖ≥‰ø°ÊÅØ\n- ÊØèÊúàÂêàÈõÜÔºöÂ∞ÜÂΩìÊúàÁöÑÂÜÖÂÆπÊï¥ÂêàÊàê‰∏ÄÊú¨ÂÆåÊï¥ÁöÑÁîµÂ≠ê‰π¶\n- ÁâπÂà´‰∏ìÈ¢òÔºöÈíàÂØπÁâπÂÆö‰∏ªÈ¢òÔºàÂ¶ÇÊñ∞ÁâàÊú¨ÂèëÂ∏ÉÔºâÂà∂‰Ωú‰∏ìÈ¢òÁîµÂ≠ê‰π¶\n\n## Ë¥°ÁåÆÊåáÂçó\n\nÊ¨¢ËøéÊèê‰∫§PRÊù•ÊîπËøõËøô‰∏™È°πÁõÆÔºö\n\n1. ForkÊú¨‰ªìÂ∫ì\n2. ÂàõÂª∫‰Ω†ÁöÑÁâπÊÄßÂàÜÊîØ (`git checkout -b feature/AmazingFeature`)\n3. Êèê‰∫§‰Ω†ÁöÑÊîπÂä® (`git commit -m 'Add some AmazingFeature'`)\n4. Êé®ÈÄÅÂà∞ÂàÜÊîØ (`git push origin feature/AmazingFeature`)\n5. ÂºÄÂêØ‰∏Ä‰∏™Pull Request\n\n## ËÆ∏ÂèØËØÅ\n\nÊú¨È°πÁõÆÈááÁî® MIT ËÆ∏ÂèØËØÅ„ÄÇËØ¶ËßÅ [LICENSE](LICENSE) Êñá‰ª∂„ÄÇ\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "deepseek",
        "newsletter",
        "news",
        "deepseek language",
        "deepseek newsletter",
        "information deepseek"
      ],
      "category": "news-and-media"
    },
    "narumiruna--crypto-news-mcp": {
      "owner": "narumiruna",
      "name": "crypto-news-mcp",
      "url": "https://github.com/narumiruna/crypto-news-mcp",
      "imageUrl": "/freedevtools/mcp/pfp/narumiruna.webp",
      "description": "Retrieve and read the latest cryptocurrency news articles from Coindesk and Decrypt. Access real-time news feeds and detailed articles through their URLs.",
      "stars": 0,
      "forks": 1,
      "license": "MIT License",
      "language": "Python",
      "updated_at": "2025-08-12T12:34:25Z",
      "readme_content": "# Crypto News MCP Server\n\n## Usage\n\nFrom Docker\n\n```json\n{\n  \"mcpServers\": {\n    \"cryptonewsmcp\": {\n      \"command\": \"docker\",\n      \"args\": [\"run\", \"-i\", \"--rm\", \"narumi/crypto-news-mcp\"]\n    }\n  }\n}\n```\n\nFrom PyPI\n\n```json\n{\n  \"mcpServers\": {\n    \"cryptonewsmcp\": {\n      \"command\": \"uvx\",\n      \"args\": [\"cryptonewsmcp\"]\n    }\n  }\n}\n```\n\nFrom GitHub\n\n```json\n{\n  \"mcpServers\": {\n    \"cryptonewsmcp\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"--from\",\n        \"git+https://github.com/narumiruna/crypto-news-mcp\",\n        \"cryptonewsmcp\"\n      ]\n    }\n  }\n}\n```\n\n## Components\n\n### Tools\n\n- recent_news\n  - Fetches latest crypto news from specified site\n  - Input:\n    - site: Source site (\"coindesk\" or \"decrypt\")\n  - Returns formatted list of news entries with titles, links, dates and summaries\n- read_news\n  - Fetches article HTML from URL and converts it to Markdown\n  - Input:\n    - url: Article URL to retrieve\n  - Returns Markdown-formatted article content\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "crypto",
        "cryptocurrency",
        "coindesk",
        "crypto news",
        "cryptocurrency news",
        "narumiruna crypto"
      ],
      "category": "news-and-media"
    },
    "nefino--mcp-nefino": {
      "owner": "nefino",
      "name": "mcp-nefino",
      "url": "https://github.com/nefino/mcp-nefino",
      "imageUrl": "/freedevtools/mcp/pfp/nefino.webp",
      "description": "Access renewable energy news and information focused on projects in Germany, enabling users to filter announcements by geographic locations and various renewable energy topics. Supports date range and recency-based queries for structured and secure data retrieval.",
      "stars": 0,
      "forks": 5,
      "license": "Apache License 2.0",
      "language": "Python",
      "updated_at": "2025-02-24T13:18:01Z",
      "readme_content": "# Nefino MCP Server\n\nThe Nefino MCP Server is a [Model Context Protocol (MCP)](https://modelcontextprotocol.io) server that provides Large Language Models (LLMs) with access to news and information about renewable energy projects, planning, and announcements in Germany. It integrates with the Nefino API to provide structured access to this data.\n\n## Features\n\n- Retrieve news items for specific geographic locations\n- Filter by various renewable energy topics (solar, wind, hydrogen, etc.)\n- Support for both date range and recency-based queries\n- Secure authentication through environment variables\n- Input validation and error handling\n- Full MCP compatibility\n\n## Installation\n\n### Prerequisites\n\n- Python 3.10 or higher\n- Access to the Nefino API (credentials required)\n\n### Installation\n\n```bash\npip install git+https://github.com/nefino/mcp-nefino.git\n```\n\n## Configuration\n\nThe server requires several environment variables to be set. They should be passed in directly when running the server.\n\n```bash\nNEFINO_USERNAME=your_username\nNEFINO_PASSWORD=your_password\nNEFINO_JWT_SECRET=your_jwt_secret\nNEFINO_BASE_URL=http://api_endpoint\n```\n\n## Usage\n\n### With Claude Desktop\n\n1. Install [Claude Desktop](https://claude.ai/download)\n\n2. Add the following to your Claude Desktop configuration (`~/Library/Application Support/Claude/claude_desktop_config.json` on macOS or `%APPDATA%\\Claude\\claude_desktop_config.json` on Windows):\n\n```json\n{\n  \"mcpServers\": {\n    \"nefino\": {\n      \"command\": \"python\",\n      \"args\": [\"-m\", \"mcp_nefino\"],\n      \"env\": {\n        \"NEFINO_USERNAME\": \"your_username\",\n        \"NEFINO_PASSWORD\": \"your_password\",\n        \"NEFINO_JWT_SECRET\": \"your_jwt_secret\",\n        \"NEFINO_BASE_URL\": \"http://api_endpoint\"\n      }\n    }\n  }\n}\n```\n\n3. Restart Claude Desktop\n\n### Direct Usage\n\nYou can also run the server directly:\n\n```bash\npython -m mcp_nefino\n```\n\n## Available Tools\n\n### retrieve_news_items_for_place\n\nRetrieves news items for a specific location with various filtering options.\n\nParameters:\n- `place_id` (string): The ID of the place\n- `place_type` (enum): Type of place (PR, CTY, AU, LAU)\n- `range_or_recency` (enum, optional): RANGE or RECENCY\n- `last_n_days` (integer, optional): Number of days to look back (for RECENCY mode)\n- `date_range_begin` (string, optional): Start date in YYYY-MM-DD format (for RANGE mode)\n- `date_range_end` (string, optional): End date in YYYY-MM-DD format (for RANGE mode)\n- `news_topics` (list of enums, optional): Topics to filter by (BATTERY_STORAGE, GRID_EXPANSION, SOLAR, HYDROGEN, WIND)\n\nExample query via Claude:\n```\nGet renewable energy news for administrative unit DE9_AU0213 from January to June 2024, focusing on solar projects.\n```\n\n## Development\n\nTo run in development mode with the MCP Inspector:\n\n```bash\nmcp dev -m mcp_nefino\n```\n\n## Error Handling\n\nThe server performs validation on:\n- Date formats (YYYY-MM-DD)\n- Date range validity\n- Parameter combinations for RANGE vs RECENCY modes\n- API credentials and connectivity\n- News topic validity\n\nAll errors are returned with descriptive messages to help diagnose issues.\n\n## License\n\n[License type - e.g., MIT] - see LICENSE file for details",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "retrieval",
        "queries",
        "news",
        "energy news",
        "news information",
        "filter announcements"
      ],
      "category": "news-and-media"
    },
    "pskill9--hn-server": {
      "owner": "pskill9",
      "name": "hn-server",
      "url": "https://github.com/pskill9/hn-server",
      "imageUrl": "/freedevtools/mcp/pfp/pskill9.webp",
      "description": "Fetch and parse stories from Hacker News, providing structured data on various story types like top, new, ask, show, and jobs.",
      "stars": 35,
      "forks": 8,
      "license": "MIT License",
      "language": "JavaScript",
      "updated_at": "2025-08-10T18:49:11Z",
      "readme_content": "# Hacker News MCP Server\n\nA Model Context Protocol (MCP) server that provides tools for fetching stories from Hacker News. This server parses the HTML content from news.ycombinator.com and provides structured data for different types of stories (top, new, ask, show, jobs).\n\n<a href=\"https://glama.ai/mcp/servers/oge85xl22f\"><img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/oge85xl22f/badge\" alt=\"Hacker News MCP server\" /></a>\n\n## Features\n\n- Fetch different types of stories (top, new, ask, show, jobs)\n- Get structured data including titles, URLs, points, authors, timestamps, and comment counts\n- Configurable limit on number of stories returned\n- Clean error handling and validation\n\n## Installation\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/pskill9/hn-server\ncd hn-server\n```\n\n2. Install dependencies:\n```bash\nnpm install\n```\n\n3. Build the server:\n```bash\nnpm run build\n```\n\n4. Add to your MCP settings configuration file (location depends on your system):\n\nFor VSCode Claude extension:\n```json\n{\n  \"mcpServers\": {\n    \"hacker-news\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/hn-server/build/index.js\"]\n    }\n  }\n}\n```\n\n## Usage\n\nThe server provides a tool called `get_stories` that can be used to fetch stories from Hacker News.\n\n### Tool: get_stories\n\nParameters:\n- `type` (string): Type of stories to fetch\n  - Options: 'top', 'new', 'ask', 'show', 'jobs'\n  - Default: 'top'\n- `limit` (number): Number of stories to return\n  - Range: 1-30\n  - Default: 10\n\nExample usage:\n```typescript\nuse_mcp_tool with:\nserver_name: \"hacker-news\"\ntool_name: \"get_stories\"\narguments: {\n  \"type\": \"top\",\n  \"limit\": 5\n}\n```\n\nSample output:\n```json\n[\n  {\n    \"title\": \"Example Story Title\",\n    \"url\": \"https://example.com/story\",\n    \"points\": 100,\n    \"author\": \"username\",\n    \"time\": \"2024-12-28T00:03:05\",\n    \"commentCount\": 50,\n    \"rank\": 1\n  },\n  // ... more stories\n]\n```\n\n## Integrating with Claude\n\nTo use this MCP server with Claude, you'll need to:\n\n1. Have the Claude desktop app or VSCode Claude extension installed\n2. Configure the MCP server in your settings\n3. Use Claude's natural language interface to interact with Hacker News\n\n### Configuration\n\nFor the Claude desktop app, add the server configuration to:\n```json\n// ~/Library/Application Support/Claude/claude_desktop_config.json (macOS)\n// %APPDATA%\\Claude\\claude_desktop_config.json (Windows)\n{\n  \"mcpServers\": {\n    \"hacker-news\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/hn-server/build/index.js\"]\n    }\n  }\n}\n```\n\nFor the VSCode Claude extension, add to:\n```json\n// VSCode Settings JSON\n{\n  \"mcpServers\": {\n    \"hacker-news\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/hn-server/build/index.js\"]\n    }\n  }\n}\n```\n\n### Example Interactions\n\nOnce configured, you can interact with Claude using natural language to fetch Hacker News stories. Examples:\n\n- \"Show me the top 5 stories from Hacker News\"\n- \"What are the latest Ask HN posts?\"\n- \"Get me the top Show HN submissions from today\"\n\nClaude will automatically use the appropriate parameters to fetch the stories you want.\n\n\n\n### Story Object Structure\n\nEach story object contains:\n- `title` (string): The story title\n- `url` (string, optional): URL of the story (may be internal HN URL for text posts)\n- `points` (number): Number of upvotes\n- `author` (string): Username of the poster\n- `time` (string): Timestamp of when the story was posted\n- `commentCount` (number): Number of comments\n- `rank` (number): Position in the list\n\n## Development\n\nThe server is built using:\n- TypeScript\n- Model Context Protocol SDK\n- Axios for HTTP requests\n- Cheerio for HTML parsing\n\nTo modify the server:\n\n1. Make changes to `src/index.ts`\n2. Rebuild:\n```bash\nnpm run build\n```\n\n## Error Handling\n\nThe server includes robust error handling for:\n- Invalid story types\n- Network failures\n- HTML parsing errors\n- Invalid parameter values\n\nErrors are returned with appropriate error codes and descriptive messages.\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## License\n\nMIT License - feel free to use this in your own projects.",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "pskill9",
        "news",
        "hacker",
        "hacker news",
        "media pskill9",
        "stories hacker"
      ],
      "category": "news-and-media"
    },
    "renant--mcp-tabnews": {
      "owner": "renant",
      "name": "mcp-tabnews",
      "url": "https://github.com/renant/mcp-tabnews",
      "imageUrl": "/freedevtools/mcp/pfp/renant.webp",
      "description": "Access TabNews API data to retrieve news content, user-specific posts, and analytics related to user-created content. Provides tools for checking API status and fetching comments on content.",
      "stars": 3,
      "forks": 2,
      "license": "MIT License",
      "language": "TypeScript",
      "updated_at": "2025-08-14T10:50:14Z",
      "readme_content": "# MCP TabNews Integration\n\n[![smithery badge](https://smithery.ai/badge/@renant/mcp-tabnews)](https://smithery.ai/server/@renant/mcp-tabnews)\n\nA Model Context Protocol (MCP) integration for TabNews.\n\nThis MCP server is also available on [Smithery](https://smithery.ai/server/@renant/mcp-tabnews) for direct integration.\n\n<a href=\"https://glama.ai/mcp/servers/@renant/mcp-tabnews\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@renant/mcp-tabnews/badge\" alt=\"TabNews Integration MCP server\" />\n</a>\n\n## Available Tools\n\n- `checkStatusTool`: Check the status of the TabNews API.\n- `getContentsTool`: Get contents from TabNews.\n- `getContentsByUserTool`: Get contents from TabNews by user.\n- `getContentTool`: Get a content with body from TabNews by user and slug.\n- `getContentChildrenTool`: Get comments from TabNews by content.\n- `getAnalyticsUserCreatedTool`: Get the analytics of a user created contents from TabNews.\n- `getAnalyticsRootContentPublishedTool`: Get the analytics of a root content published from TabNews.\n- `getAnalyticsChildContentPublishedTool`: Get the analytics of a child content published from TabNews.\n- `getRssFeedTool`: Get the RSS feed from TabNews.\n\n# Integration with AI Tools\n\n## Inspect MCP Server Capabilities\n\nYou can inspect this MCP server's capabilities using Smithery:\n\n```bash\nnpx -y @smithery/cli@latest inspect @renant/mcp-tabnews\n```\n\nThis will show you all available tools, their parameters, and how to use them.\n\n## Setup\n\n### Manual Installation\n\n1. Make sure you're using Node.js v23+\n\n```bash\nnode -v\n#v23.11.0\n```\n\n2. Clone this repository:\n\n```bash\ngit clone https://github.com/renant/mcp-tabnews.git\ncd mcp-tabnews\n```\n\n3. Restore dependencies:\n\n```bash\nnpm ci\n```\n\n## Integration with AI Tools\n\n### Cursor Setup\n\n1. Open Cursor Settings\n2. Navigate to MCP section\n3. Click \"Add new MCP server\"\n4. Configure the server:\n\n   ```\n   Name = mcp-tabnews\n   Type = command\n   Command = node ABSOLUTE_PATH_TO_PROJECT/src/index.ts\n   ```\n\n   or if you prefer executing it from Smithery\n\n   ```\n   Name = mcp-tabnews\n   Type = command\n   Command = npm exec -- @smithery/cli@latest run @renant/mcp-tabnews\n   ```\n\nor configure directly from the Cursor's global MCP file located in `~/.cursor/mcp.json` and add the following:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-tabnews\": {\n      \"command\": \"node\",\n      \"args\": [\"ABSOLUTE_PATH_TO_PROJECT/src/index.ts\"]\n    }\n  }\n}\n```\n\nor if you prefer executing it from Smithery\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-tabnews\": {\n      \"command\": \"npm\",\n      \"args\": [\n        \"exec\",\n        \"--\",\n        \"@smithery/cli@latest\",\n        \"run\",\n        \"@renant/mcp-tabnews\"\n      ]\n    }\n  }\n}\n```\n\n5. Make sure Cursor chat is in Agent mode by selecting \"Agent\" in the lower left side dropdown\n\n6. Go to the chat an ask any question about TabNews\n\n### Claude Desktop Setup\n\n#### Installing via Smithery\n\nTo install TabNews for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@renant/mcp-tabnews):\n\n```bash\nnpx -y @smithery/cli install @renant/mcp-tabnews --client claude\n```\n\n# Development\n\n## Features\n\n- Built with Model Context Protocol (MCP)\n- Type-safe with TypeScript and Zod schema validation\n- Native TypeScript support in Node.js without transpilation\n- Standard I/O transport for easy integration\n- Structured error handling\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## Author\n\n[Renan Teixeira](https://renant.is-a.dev)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](./LICENSE) file for details.",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "tabnews",
        "api",
        "news",
        "tabnews api",
        "access tabnews",
        "tabnews access"
      ],
      "category": "news-and-media"
    },
    "wopal-cn--mcp-hotnews-server": {
      "owner": "wopal-cn",
      "name": "mcp-hotnews-server",
      "url": "https://github.com/wopal-cn/mcp-hotnews-server",
      "imageUrl": "/freedevtools/mcp/pfp/wopal-cn.webp",
      "description": "Provides real-time trending topics from major Chinese social platforms and news sites, formatted in Markdown with clickable links and heat index support where applicable.",
      "stars": 175,
      "forks": 20,
      "license": "No License",
      "language": "",
      "updated_at": "2025-09-29T15:45:32Z",
      "readme_content": "# HotNews MCP Server\n\nA Model Context Protocol (MCP) server that provides real-time hot trending topics from major Chinese social platforms and news sites.\n\n## Features\n\n- Real-time hot topics from 9 major Chinese platforms\n- MCP protocol compatible\n- Easy integration with AI models\n- Markdown formatted output with clickable links\n- Heat index support (where available)\n\n## Supported Platforms\n\n1. Zhihu Hot List (Áü•‰πéÁÉ≠Ê¶ú)\n2. 36Kr Hot List (36Ê∞™ÁÉ≠Ê¶ú)\n3. Baidu Hot Discussion (ÁôæÂ∫¶ÁÉ≠ÁÇπ)\n4. Bilibili Hot List (BÁ´ôÁÉ≠Ê¶ú)\n5. Weibo Hot Search (ÂæÆÂçöÁÉ≠Êêú)\n6. Douyin Hot List (ÊäñÈü≥ÁÉ≠ÁÇπ)\n7. Hupu Hot List (ËôéÊâëÁÉ≠Ê¶ú)\n8. Douban Hot List (Ë±ÜÁì£ÁÉ≠Ê¶ú)\n9. IT News (ITÊñ∞Èóª)\n\n> API Source, This project uses the `api.vvhan.com` service for fetching hot topics data.\n\n## Available Tools\n- `get_hot_news`\n  - `sources` - Required arguments: Platform ID list\n- Example usage:\n  - `get_hot_news([3])` : Get Baidu Hot Discussion only\n  - `get_hot_news([1,3,7])` : Get hot lists from zhihuHot, Baidu, and huPu\n  - `get_hot_news([1,2,3,4])` : Get hot lists from zhihuHot, 36Kr, Baidu, and Bilibili`\n\n## Installation\n\n### NPX\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-server-hotnews\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@wopal/mcp-server-hotnews\"\n      ]\n    }\n  }\n}\n```\n\n### Docker \nÔºà Docker image not uploaded to Docker Hub, need to build it yourself. Ôºâ\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-server-hotnews\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"wopal/mcp-server-hotnews\"\n      ]\n    }\n  }\n}\n```\n\n## Development\n\n```bash\n# Install dependencies\nnpm install\n\n# Watch mode\nnpm run watch\n\n# Build\nnpm run build\n\n# Test URLs\nnpm run test:urls\n```\n\nDocker build:\n\n```bash\ndocker build -t wopal/mcp-server-hotnews:latest -f Dockerfile .\n```\n\n## License\n\nThis MCP server is licensed under the MIT License. This means you are free to use, modify, and distribute the software, subject to the terms and conditions of the MIT License. For more details, please see the LICENSE file in the project repository.\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "hotnews",
        "news",
        "mcp",
        "mcp hotnews",
        "hotnews server",
        "news sites"
      ],
      "category": "news-and-media"
    },
    "yuri-xyz--cryptopanic-mcp-server": {
      "owner": "yuri-xyz",
      "name": "cryptopanic-mcp-server",
      "url": "https://github.com/yuri-xyz/cryptopanic-mcp-server",
      "imageUrl": "/freedevtools/mcp/pfp/yuri-xyz.webp",
      "description": "Fetches the latest cryptocurrency news, analysis, and videos from CryptoPanic, with options for customizable content types and pagination to keep AI models updated with market trends.",
      "stars": 1,
      "forks": 1,
      "license": "MIT License",
      "language": "",
      "updated_at": "2025-08-20T16:37:56Z",
      "readme_content": "# cryptopanic-mcp-server\n\n[![Discord](https://img.shields.io/discord/1353556181251133481?cacheSeconds=3600)](https://discord.gg/aRnuu2eJ)\n![GitHub License](https://img.shields.io/github/license/kukapay/blockbeats-mcp)\n\nProvide the latest cryptocurrency news to AI agents, powered by [CryptoPanic](https://cryptopanic.com/).\n\n<a href=\"https://glama.ai/mcp/servers/dp6kztv7yx\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/dp6kztv7yx/badge\" alt=\"cryptopanic-mcp-server MCP server\" />\n</a>\n\n## Tools\n\nThe server implements only one tool: \n\n```python\nget_crypto_news(kind: str = \"news\", num_pages: int = 1) -> str\n```\n- `kind`: Content type (news, analysis, videos)\n- `num_pages`: Number of pages to fetch (default: 1, max: 10)\n\nExample Output: \n\n```\n- Bitcoin Breaks $60k Resistance Amid ETF Optimism\n- Ethereum Layer 2 Solutions Gain Traction\n- New Crypto Regulations Proposed in EU\n- ...\n```\n\n\n## Configuration\n\n- CryptoPanic API key: get one [here](https://cryptopanic.com/developers/api/)\n- Add a server entry to your configuration file:\n\n```\n\"mcpServers\": { \n  \"cryptopanic-mcp-server\": { \n    \"command\": \"uv\", \n    \"args\": [ \n      \"--directory\", \"/your/path/to/cryptopanic-mcp-server\", \n      \"run\", \n      \"main.py\" \n    ], \n    \"env\": { \n      \"CRYPTOPANIC_API_KEY\": \"\" \n    } \n  } \n}\n```\n\n## License\n\nMIT License - see `LICENSE` file",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "cryptopanic",
        "cryptocurrency",
        "news",
        "cryptocurrency news",
        "cryptopanic mcp",
        "latest cryptocurrency"
      ],
      "category": "news-and-media"
    }
  }
}