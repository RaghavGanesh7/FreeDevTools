{
  "category": "gaming",
  "categoryDisplay": "Gaming",
  "description": "Integration with gaming related data, game engines, and services",
  "totalRepositories": 9,
  "repositories": {
    "ddsky--gamebrain-api-clients": {
      "owner": "ddsky",
      "name": "gamebrain-api-clients",
      "url": "https://github.com/ddsky/gamebrain-api-clients",
      "imageUrl": "",
      "description": "Search and discover hundreds of thousands of video games on any platform through the [GameBrain API](https://gamebrain.co/api).",
      "stars": 2,
      "forks": 2,
      "license": "Apache License 2.0",
      "language": "Java",
      "updated_at": "2025-09-13T19:09:14Z",
      "readme_content": "# MCP Setup\n\nRead more about setting up the [GameBrain MCP server](https://gamebrain.co/api/docs/mcp-setup). Simply get your free API key and copy this config into your MCP client:\n\n```json\n{\n  \"mcpServers\": {\n    \"gamebrain\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"mcp-remote\",\n        \"https://api.gamebrain.co/v1/mcp?api-key=YOUR_KEY\"\n      ]\n    }\n  }\n}\n```\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "gamebrain",
        "gaming",
        "games",
        "gamebrain api",
        "ddsky gamebrain",
        "gaming integration"
      ],
      "category": "gaming"
    },
    "jiayao--mcp-chess": {
      "owner": "jiayao",
      "name": "mcp-chess",
      "url": "https://github.com/jiayao/mcp-chess",
      "imageUrl": "",
      "description": "A MCP server playing chess against LLMs.",
      "stars": 13,
      "forks": 5,
      "license": "Apache License 2.0",
      "language": "Python",
      "updated_at": "2025-10-03T19:06:05Z",
      "readme_content": "# MCP Chess Server\n\nThis MCP let's you play chess against any LLM.\n\n## Installation\n\nTo use this chess server, add the following configuration to your MCP config:\n\n```json\n{\n  \"mcpServers\": {\n    \"chess\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-chess\"\n      ]\n    }\n  }\n}\n```\n\n## Usage\n\nPlay a game:\n![Chess starting position with black pieces](screenshots/start_black.png)\n\n![A few moves later](screenshots/acc_dragon.png)\n\nFind a position in a PGN for game analysis:\n\n![Find a position in a PGN](screenshots/find_position.png)\n\n## Available Tools\n\nThe server provides the following tools:\n\n*   `get_board_visualization()`: Provides the current state of the chessboard as an image. The board orientation automatically flips based on the user's assigned color.\n*   `get_turn()`: Indicates whose turn it is ('white' or 'black').\n*   `get_valid_moves()`: Lists all legal moves for the current player in UCI notation (e.g., 'e2e4', 'g1f3'). Returns an empty list if the game is over.\n*   `make_move(move_san: str)`: Makes a move on the board using Standard Algebraic Notation (SAN) (e.g., 'e4', 'Nf3', 'Bxe5'). Returns the move in SAN and UCI, the new board FEN, and game status.\n*   `new_game(user_plays_white: bool = True)`: Starts a new game, resetting the board. By default, the user plays white. Sets the user's color for board orientation. Returns a confirmation message.\n*   `find_position_in_pgn(pgn_string: str, condition: str)`: Finds the first board position in a PGN string matching a condition (e.g., \"bishop on a3\") and returns an image of that board state. The condition format is \"piece_type on square_name\". Valid piece types are \"pawn\", \"knight\", \"bishop\", \"rook\", \"queen\", \"king\".\n\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "gaming",
        "chess",
        "llms",
        "mcp chess",
        "chess mcp",
        "integration gaming"
      ],
      "category": "gaming"
    },
    "kkjdaniel--bgg-mcp": {
      "owner": "kkjdaniel",
      "name": "bgg-mcp",
      "url": "https://github.com/kkjdaniel/bgg-mcp",
      "imageUrl": "",
      "description": "An MCP server that enables interaction with board game related data via the BoardGameGeek API (XML API2).",
      "stars": 16,
      "forks": 4,
      "license": "MIT License",
      "language": "Go",
      "updated_at": "2025-09-29T03:40:04Z",
      "readme_content": "<p align=\"center\">\n  <img src=\"images/bgg-mcp-logo.png\" width=\"200\" alt=\"BGG MCP Logo\">\n</p>\n<h1 align=\"center\">BGG MCP: BoardGameGeek MCP Server</h1>\n\n<p align=\"center\">\n  <a href=\"https://smithery.ai/server/@kkjdaniel/bgg-mcp\"><img src=\"https://smithery.ai/badge/@kkjdaniel/bgg-mcp\" alt=\"smithery badge\"></a>\n  <a href=\"https://archestra.ai/mcp-catalog/kkjdaniel__bgg-mcp\"><img src=\"https://archestra.ai/mcp-catalog/api/badge/quality/kkjdaniel/bgg-mcp\" alt=\"trust score badge\"></a>\n  <a href=\"https://github.com/modelcontextprotocol/registry\"><img src=\"https://img.shields.io/badge/MCP_Registry-BGG_MCP-green\" alt=\"MCP Registry\"></a>\n  <br>\n  <a href=\"https://github.com/kkjdaniel/bgg-mcp/actions/workflows/publish-mcp.yml\"><img src=\"https://github.com/kkjdaniel/bgg-mcp/actions/workflows/publish-mcp.yml/badge.svg\" alt=\"Publish to MCP Registry\"></a>\n  <a href=\"https://go.dev/\"><img src=\"https://img.shields.io/github/go-mod/go-version/kkjdaniel/bgg-mcp\" alt=\"Go Version\"></a>\n  <a href=\"LICENSE\"><img src=\"https://img.shields.io/github/license/kkjdaniel/bgg-mcp\" alt=\"License\"></a>\n  <a href=\"https://modelcontextprotocol.io\"><img src=\"https://img.shields.io/badge/MCP-Protocol-blue\" alt=\"MCP Protocol\"></a>\n</p>\n\nBGG MCP provides access to the BoardGameGeek API through the [Model Context Protocol](https://www.anthropic.com/news/model-context-protocol), enabling retrieval and filtering of board game data, user collections, and profiles. The server is implemented in Go, using the [GoGeek](https://github.com/kkjdaniel/gogeek) library, which helps ensure robust API interactions.\n\nPrice data is provided by [BoardGamePrices.co.uk](https://boardgameprices.co.uk), offering real-time pricing from multiple retailers.\n\nGame recommendations are powered by [Recommend.Games](https://recommend.games/), which provides algorithmic similarity recommendations based on BoardGameGeek data.\n\n<a href=\"https://boardgamegeek.com/\">\n  <img src=\"images/powered-bgg.webp\" width=\"160\" alt=\"Powered by BGG\">\n</a>\n\n## Demo\n\n<div align=\"center\">\n  \n  [![Rules Tool Demo Video](https://img.youtube.com/vi/cNX4WwVbFko/maxresdefault.jpg)](https://youtu.be/cNX4WwVbFko)\n  \n  **[‚ñ∂Ô∏è Watch the Rules Tool Demo Video](https://youtu.be/cNX4WwVbFko)**\n  \n</div>\n\n## Tools\n\n### Core Tools\n\n| Tool                 | Description                                                                 |\n| -------------------- | --------------------------------------------------------------------------- |\n| `bgg-search`         | Search for board games with type filtering (base games, expansions, or all) |\n| `bgg-details`        | Get detailed information about a specific board game                        |\n| `bgg-collection`     | Query and filter a user's game collection with extensive filtering options  |\n| `bgg-hot`            | Get the current BGG hotness list                                            |\n| `bgg-user`           | Get user profile information                                                |\n| `bgg-price`          | Get current prices from multiple retailers using BGG IDs                    |\n| `bgg-trade-finder`   | Find trading opportunities between two BGG users                            |\n| `bgg-recommender`    | Get game recommendations based on similarity to a specific game             |\n| `bgg-thread-details` | Get the full content of a specific BGG forum thread including all posts     |\n\n### üß™ Experimental Tools\n\n| Tool        | Description                                                                                |\n| ----------- | ------------------------------------------------------------------------------------------ |\n| `bgg-rules` | Answer rules questions by searching BGG forums for relevant discussions and clarifications |\n\n## Prompts\n\n- **Trade Sales Post** - Generate a formatted sales post for your BGG 'for trade' collection with discounted market prices\n- **Game Recommendations** - Get personalized game recommendations based on your BGG collection and preferences\n\n## Example Prompts\n\nHere are some example prompts you can use to interact with the BGG MCP tools:\n\n### üîç Search\n\n```\n\"Search for Wingspan on BGG\"\n\"How many expansions does Grand Austria Hotel have?\"\n\"Search for Wingspan expansions only\"\n```\n\n### üìä Game Details\n\n```\n\"Get details for Azul\"\n\"Show me information about game ID 224517\"\n\"What's the BGG rating for Gloomhaven?\"\n```\n\n### üìö Collection\n\n```\n\"Show me ZeeGarcia's game collection\"\n\"Show games rated 9+ in kkjdaniel's collection\"\n\"List unplayed games in rahdo's collection\"\n\"Find games for 6 players in kkjdaniel's collection\"\n\"Show me all the games rated 3 and below in my collection\"\n\"What games in my collection does rahdo want?\"\n\"What games does kkjdaniel have that I want?\"\n```\n\n### üî• Hotness\n\n```\n\"Show me the current BGG hotness list\"\n\"What's trending on BGG?\"\n```\n\n### üë§ User Profile\n\n```\n\"Show me details about BGG user rahdo\"\n\"When did user ZeeGarcia join BGG?\"\n\"How many buddies do I have on bgg?\"\n```\n\n### üí∞ Prices\n\n```\n\"Get the best price for Wingspan in GBP\"\n\"Show me the best UK price for Ark Nova\"\n\"Compare prices for: Wingspan & Ark Nova\"\n```\n\n### üéØ Recommendations\n\n```\n\"Recommend games similar to Wingspan\"\n\"What games are like Azul but with at least 1000 ratings?\"\n\"Find 5 games similar to Troyes\"\n```\n\n### üìñ Rules (Experimental)\n\n```\n\"[Your rules question about any board game] - use bgg-rules\"\n\"How does [game mechanic] work in [game name]? use bgg-rules\"\n\"Can I [specific action] in [game name]? use bgg-rules\"\n\"What happens when [situation] in [game name]? use bgg-rules\"\n```\n\nNote: Include \"use bgg-rules\" in your question to ensure the AI searches BGG forums for answers.\n\n## Installation\n\nYou have multiple options for installing BGG MCP:\n\n### A) Installing via Smithery (Recommended)\n\nGet started in under a minute with [Smithery](https://smithery.ai/server/@kkjdaniel/bgg-mcp):\n\n1. **Sign up** at Smithery and select your client (e.g., Claude Desktop)\n2. **Follow the quick setup** - Smithery handles all configuration automatically\n3. **Start using BGG tools** immediately - no manual setup required\n\n#### Or via Connectors for Claude users (Preferred)\n\nAdd BGG MCP as a custom connector:\n\n1. Go to **Settings ‚Üí Connectors ‚Üí Add custom connector**\n2. Enter this URL:\n   ```\n   https://server.smithery.ai/@kkjdaniel/bgg-mcp/mcp\n   ```\n3. Click **Connect** to authorise\n\nThat's it! The server uses the latest Streamable HTTP transport.\n\n**Tip:** Connectors added on Claude Desktop will also appear and work on mobile!\n\n### B) MCP Registry\n\nInstall via the MCP Registry:\n\n```bash\nmcp install io.github.kkjdaniel/bgg-mcp\n```\n\n### C) Manual Setup\n\n#### 1. Install Go\n\nYou will need to have Go installed on your system to build binary. This can be easily [downloaded and setup here](https://go.dev/doc/install), or you can use the package manager that you prefer such as Brew.\n\n#### 2. Build\n\nThe project includes a Makefile to simplify building and managing the binary.\n\n```bash\n# Build the application (output goes to build/bgg-mcp)\nmake build\n\n# Clean build artifacts\nmake clean\n\n# Both clean and build\nmake all\n```\n\nOr you can simply build it directly with Go...\n\n```bash\ngo build -o build/bgg-mcp\n```\n\n#### 3. Add MCP Config\n\nIn the `settings.json` (VS Code / Cursor) or `claude_desktop_config.json` add the following to your list of servers, pointing it to the binary you created earlier, once you load up your AI tool you should see the tools provided by the server connected:\n\n```json\n\"bgg\": {\n    \"command\": \"path/to/build/bgg-mcp\",\n    \"args\": [\"-mode\", \"stdio\"]\n}\n```\n\nMore details for configuring Claude can be [found here](https://modelcontextprotocol.io/quickstart/user).\n\n## Optional Configuration\n\n### Username Configuration (Optional)\n\nYou can optionally set the `BGG_USERNAME` environment variable to enable \"me\" and \"my\" references in queries:\n\n```json\n\"bgg\": {\n    ...\n    \"env\": {\n        \"BGG_USERNAME\": \"your_bgg_username\"\n    }\n}\n```\n\nThis enables:\n\n- **Collection queries**: \"Show my collection\" instead of specifying your username\n- **User queries**: \"Show my BGG profile\"\n- **AI assistance**: The AI can automatically use your username for comparisons and analysis\n\n**Note**: When you use self-references (me, my, I) without setting BGG_USERNAME, you'll get a clear error message.\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "boardgamegeek",
        "gaming",
        "mcp",
        "boardgamegeek api",
        "gaming integration",
        "data boardgamegeek"
      ],
      "category": "gaming"
    },
    "opgginc--opgg-mcp": {
      "owner": "opgginc",
      "name": "opgg-mcp",
      "url": "https://github.com/opgginc/opgg-mcp",
      "imageUrl": "",
      "description": "Access real-time gaming data across popular titles like League of Legends, TFT, and Valorant, offering champion analytics, esports schedules, meta compositions, and character statistics.",
      "stars": 39,
      "forks": 11,
      "license": "MIT License",
      "language": "TypeScript",
      "updated_at": "2025-09-24T21:26:25Z",
      "readme_content": "# OP.GG MCP Server\n\n[![smithery badge](https://smithery.ai/badge/@opgginc/opgg-mcp)](https://smithery.ai/server/@opgginc/opgg-mcp)\n\nThe OP.GG MCP Server is a Model Context Protocol implementation that seamlessly connects OP.GG data with AI agents and platforms. This server enables AI agents to retrieve various OP.GG data via function calling.\n\n![opgg-mcp-lol-leaderboard](https://github.com/user-attachments/assets/e89a77e7-0b83-4e20-a660-b16aa2d03fe2)\n![opgg-mcp-esports](https://github.com/user-attachments/assets/4e134577-57b6-4369-bb71-b72f1bebcdd8)\n\n## Overview\n\nThis MCP server provides AI agents with access to OP.GG data through a standardized interface. It offers a simple way to connect to our remote server (https://mcp-api.op.gg/mcp), allowing for easy installation and immediate access to OP.GG data in a format that's easily consumable by AI models and agent frameworks.\n\n## Features\n\nThe OP.GG MCP Server currently supports the following tools:\n\n### League of Legends\n- **lol-champion-leader-board**: Get ranking board data for League of Legends champions.\n- **lol-champion-analysis**: Provides analysis data for League of Legends champions (counter and ban/pick data available in the \"weakCounters\" field).\n- **lol-champion-meta-data**: Retrieves meta data for a specific champion, including statistics and performance metrics.\n- **lol-champion-skin-sale**: Retrieves information about champion skins that are currently on sale.\n- **lol-summoner-search**: Search for League of Legends summoner information and stats.\n- **lol-champion-positions-data**: Retrieves position statistics data for League of Legends champions, including win rates and pick rates by position.\n- **lol-summoner-game-history**: Retrieve recent game history for a League of Legends summoner.\n- **lol-summoner-renewal**: Refresh and update League of Legends summoner match history and stats.\n\n### Esports (League of Legends)\n- **esports-lol-schedules**: Get upcoming LoL match schedules.\n- **esports-lol-team-standings**: Get team standings for a LoL league.\n\n### Teamfight Tactics (TFT)\n- **tft-meta-trend-deck-list**: TFT deck list tool for retrieving current meta decks.\n- **tft-meta-item-combinations**: TFT tool for retrieving information about item combinations and recipes.\n- **tft-champion-item-build**: TFT tool for retrieving champion item build information.\n- **tft-recommend-champion-for-item**: TFT tool for retrieving champion recommendations for a specific item.\n- **tft-play-style-comment**: This tool provides comments on the playstyle of TFT champions.\n\n### Valorant\n- **valorant-meta-maps**: Valorant map meta data.\n- **valorant-meta-characters**: Valorant character meta data.\n- **valorant-leaderboard**: Fetch Valorant leaderboard by region.\n- **valorant-agents-composition-with-map**: Retrieve agent composition data for a Valorant map.\n- **valorant-characters-statistics**: Retrieve character statistics data for Valorant, optionally filtered by map.\n- **valorant-player-match-history**: Retrieve match history for a Valorant player using their game name and tag line.\n\n## Usage\n\nThe OP.GG MCP Server can be used with any MCP-compatible client. The following content explains installation methods using Claude Desktop as an example.\n\n### Direct Connection via StreamableHttp\n\nIf you want to connect directly to our StreamableHttp endpoint, you can use the `supergateway` package. This provides a simple way to connect to our remote server without having to install the full OP.GG MCP Server.\n\nAdd the following to your `claude_desktop_config.json` file:\n\n#### Mac/Linux\n\n```json\n{\n  \"mcpServers\": {\n    \"opgg-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"supergateway\",\n        \"--streamableHttp\",\n        \"https://mcp-api.op.gg/mcp\"\n      ]\n    }\n  }\n}\n```\n\n#### Windows\n\n```json\n{\n  \"mcpServers\": {\n    \"opgg-mcp\": {\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"supergateway\",\n        \"--streamableHttp\",\n        \"https://mcp-api.op.gg/mcp\"\n      ]\n    }\n  }\n}\n```\n\nThis configuration will use the `supergateway` package to establish a direct connection to our StreamableHttp endpoint, providing you with immediate access to all OP.GG data tools.\n\n### Installing via Smithery\n\nTo install OP.GG MCP for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@opgginc/opgg-mcp):\n\n```bash\n$ npx -y @smithery/cli@latest install @opgginc/opgg-mcp --client claude --key {SMITHERY_API_KEY}\n```\n\n### Adding to MCP Configuration\n\nTo add this server to your Claude Desktop MCP configuration, add the following entry to your `claude_desktop_config.json` file:\n\n#### Mac/Linux\n\n```json\n{\n  \"mcpServers\": {\n    \"opgg-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@smithery/cli@latest\",\n        \"run\",\n        \"@opgginc/opgg-mcp\",\n        \"--key\",\n        \"{SMITHERY_API_KEY}\"\n      ]\n    }\n  }\n}\n```\n\n#### Windows\n\n```json\n{\n  \"mcpServers\": {\n    \"opgg-mcp\": {\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"@smithery/cli@latest\",\n        \"run\",\n        \"@opgginc/opgg-mcp\",\n        \"--key\",\n        \"{SMITHERY_API_KEY}\"\n      ]\n    }\n  }\n}\n```\n\nAfter adding the configuration, restart Claude Desktop for the changes to take effect.\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## Related Links\n\n- [Model Context Protocol](https://modelcontextprotocol.io)\n- [OP.GG](https://op.gg)\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "opgg",
        "gaming",
        "opgginc",
        "gaming integration",
        "integration gaming",
        "gaming data"
      ],
      "category": "gaming"
    },
    "pab1ito--chess-mcp": {
      "owner": "pab1ito",
      "name": "chess-mcp",
      "url": "https://github.com/pab1it0/chess-mcp",
      "imageUrl": "",
      "description": "Access Chess.com player data, game records, and other public information through standardized MCP interfaces, allowing AI assistants to search and analyze chess information.",
      "stars": 0,
      "forks": 0,
      "license": "Unknown",
      "language": "Unknown",
      "updated_at": "",
      "readme_content": "",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "chess",
        "gaming",
        "pab1ito",
        "access chess",
        "gaming integration",
        "chess information"
      ],
      "category": "gaming"
    },
    "rishijatia--fantasy-pl-mcp": {
      "owner": "rishijatia",
      "name": "fantasy-pl-mcp",
      "url": "https://github.com/rishijatia/fantasy-pl-mcp/",
      "imageUrl": "",
      "description": "An MCP server for real-time Fantasy Premier League data and analysis tools.",
      "stars": 59,
      "forks": 17,
      "license": "MIT License",
      "language": "Python",
      "updated_at": "2025-10-03T09:37:37Z",
      "readme_content": "# Fantasy Premier League MCP Server\n\n[![PyPI version](https://badge.fury.io/py/fpl-mcp.svg)](https://badge.fury.io/py/fpl-mcp)\n[![Package Check](https://github.com/rishijatia/fantasy-pl-mcp/actions/workflows/package-check.yml/badge.svg)](https://github.com/rishijatia/fantasy-pl-mcp/actions/workflows/package-check.yml)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/fpl-mcp)](https://pypi.org/project/fpl-mcp/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Downloads](https://static.pepy.tech/badge/fpl-mcp)](https://pepy.tech/project/fpl-mcp)\n\n[![Trust Score](https://archestra.ai/mcp-catalog/api/badge/quality/rishijatia/fantasy-pl-mcp)](https://archestra.ai/mcp-catalog/rishijatia__fantasy-pl-mcp)\n<a href=\"https://glama.ai/mcp/servers/2zxsxuxuj9\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/2zxsxuxuj9/badge\" />\n\nA Model Context Protocol (MCP) server that provides access to Fantasy Premier League (FPL) data and tools. This server allows you to interact with FPL data in Claude for Desktop and other MCP-compatible clients.\n\n*Demo of the Fantasy Premier League MCP Server in action*\n\n[![Fantasy Premier League MCP Demo](https://img.youtube.com/vi/QfOOOQ_jeMA/0.jpg)](https://youtu.be/QfOOOQ_jeMA)\n\n\n## Supported Platforms\n\n- Claude Desktop\n- Cursor\n- Windsurf\n- Other MCP Compatible Desktop LLMs\n\nMobile is currently not supported.\n\n## Features\n\n- **Rich Player Data**: Access comprehensive player statistics from the FPL API\n- **Team Information**: Get details about Premier League teams\n- **Gameweek Data**: View current and past gameweek information\n- **Player Search**: Find players by name or team\n- **Player Comparison**: Compare detailed statistics between any two players\n\n## Requirements\n\n- Python 3.10 or higher\n- Claude Desktop (for AI integration)\n\n## Installation\n\n### Option 1: Install from PyPI (Recommended)\n\n```bash\npip install fpl-mcp\n```\n\n### Option 1b: Install with Development Dependencies\n\n```bash\npip install \"fpl-mcp[dev]\"\n```\n\n### Option 2: Install from GitHub\n\n```bash\npip install git+https://github.com/rishijatia/fantasy-pl-mcp.git\n```\n\n### Option 3: Clone and Install Locally\n\n```bash\ngit clone https://github.com/rishijatia/fantasy-pl-mcp.git\ncd fantasy-pl-mcp\npip install -e .\n```\n\n## Running the Server\n\nAfter installation, you have several options to run the server:\n\n### 1. Using the CLI command\n\n```bash\nfpl-mcp\n```\n\n### 2. Using the Python module\n\n```bash\npython -m fpl_mcp\n```\n\n### 3. Using with Claude Desktop\n\nConfigure Claude Desktop to use the installed package by editing your `claude_desktop_config.json` file:\n\n**Method 1: Using the Python module directly (most reliable)**\n\n```json\n{\n  \"mcpServers\": {\n    \"fantasy-pl\": {\n      \"command\": \"python\",\n      \"args\": [\"-m\", \"fpl_mcp\"]\n    }\n  }\n}\n```\n\n**Method 2: Using the installed command with full path (if installed with pip)**\n\n```json\n{\n  \"mcpServers\": {\n    \"fantasy-pl\": {\n      \"command\": \"/full/path/to/your/venv/bin/fpl-mcp\"\n    }\n  }\n}\n```\n\nReplace `/full/path/to/your/venv/bin/fpl-mcp` with the actual path to the executable. You can find this by running `which fpl-mcp` in your terminal after activating your virtual environment.\n\n> **Note:** Using just `\"command\": \"fpl-mcp\"` may result in a `spawn fpl-mcp ENOENT` error since Claude Desktop might not have access to your virtual environment's PATH. Using the full path or the Python module approach helps avoid this issue.\n\n## Usage\n\n### In Claude for Desktop\n\n1. Start Claude for Desktop\n2. You should see FPL tools available via the hammer icon\n3. Example queries:\n   - \"Compare Mohamed Salah and Erling Haaland over the last 5 gameweeks\"\n   - \"Find all Arsenal midfielders\"\n   - \"What's the current gameweek status?\"\n   - \"Show me the top 5 forwards by points\"\n\n#### Fantasy-PL MCP Usage Instructions\n\n#### Basic Commands:\n- Compare players: \"Compare [Player1] and [Player2]\"\n- Find players: \"Find players from [Team]\" or \"Search for [Player Name]\"\n- Fixture difficulty: \"Show upcoming fixtures for [Team]\"\n- Captain advice: \"Who should I captain between [Player1] and [Player2]?\"\n\n#### Advanced Features:\n- Statistical analysis: \"Compare underlying stats for [Player1] and [Player2]\"\n- Form check: \"Show me players in form right now\"\n- Differential picks: \"Suggest differentials under 10% ownership\"\n- Team optimization: \"Rate my team and suggest transfers\"\n\n#### Tips:\n- Be specific with player names for accurate results\n- Include positions when searching (FWD, MID, DEF, GK)\n- For best captain advice, ask about form, fixtures, and underlying stats\n- Request comparison of specific metrics (xG, shots in box, etc.   \n\n### MCP Inspector for Development\n\nFor development and testing:\n\n```bash\n# If you have mcp[cli] installed\nmcp dev -m fpl_mcp\n\n# Or use npx\nnpx @modelcontextprotocol/inspector python -m fpl_mcp\n```\n\n## Available Resources\n- `fpl://static/players` - All player data with comprehensive statistics\n- `fpl://static/players/{name}` - Player data by name search\n- `fpl://static/teams` - All Premier League teams\n- `fpl://static/teams/{name}` - Team data by name search\n- `fpl://gameweeks/current` - Current gameweek data\n- `fpl://gameweeks/all` - All gameweeks data\n- `fpl://fixtures` - All fixtures for the current season\n- `fpl://fixtures/gameweek/{gameweek_id}` - Fixtures for a specific gameweek\n- `fpl://fixtures/team/{team_name}` - Fixtures for a specific team\n- `fpl://players/{player_name}/fixtures` - Upcoming fixtures for a specific player\n- `fpl://gameweeks/blank` - Information about upcoming blank gameweeks\n- `fpl://gameweeks/double` - Information about upcoming double gameweeks\n\n## Available Tools\n- `get_gameweek_status` - Get precise information about current, previous, and next gameweeks\n- `analyze_player_fixtures` - Analyze upcoming fixtures for a player with difficulty ratings\n- `get_blank_gameweeks` - Get information about upcoming blank gameweeks\n- `get_double_gameweeks` - Get information about upcoming double gameweeks\n- `analyze_players` - Filter and analyze FPL players based on multiple criteria\n- `analyze_fixtures` - Analyze upcoming fixtures for players, teams, or positions\n- `compare_players` - Compare multiple players across various metrics\n- `check_fpl_authentication` - Check if FPL authentication is working correctly\n- `get_my_team` - View your authenticated team (requires authentication)\n- `get_team` - View any team with a specific ID (requires authentication)\n- `get_manager_info` - Get manager details (requires authentication)\n\n## Prompt Templates\n- `player_analysis_prompt` - Create a prompt for analyzing an FPL player in depth\n- `transfer_advice_prompt` - Get advice on player transfers based on budget and position\n- `team_rating_prompt` - Create a prompt for rating and analyzing an FPL team\n- `differential_players_prompt` - Create a prompt for finding differential players with low ownership\n- `chip_strategy_prompt` - Create a prompt for chip strategy advice\n\n## Development\n\n### Adding Features\n\nTo add new features:\n\n1. Add resource handlers in the appropriate file within `fpl_mcp/fpl/resources/`\n2. Add tool handlers in the appropriate file within `fpl_mcp/fpl/tools/`\n3. Update the `__main__.py` file to register new resources and tools\n4. Test using the MCP Inspector before deploying to Claude for Desktop\n\n## Authentication\n\nTo use features requiring authentication (like accessing your team or private leagues), you need to set up your FPL credentials:\n\n```bash\n# Run the credential setup tool\nfpl-mcp-config setup\n```\n\nThis interactive tool will:\n1. Prompt for your FPL email, password, and team ID\n2. Let you choose between storing in config.json or .env file\n3. Save credentials securely to ~/.fpl-mcp/\n\nYou can test your authentication with:\n```bash\nfpl-mcp-config test\n```\n\nAlternatively, you can manually configure authentication:\n1. Create `~/.fpl-mcp/.env` file with:\n   ```\n   FPL_EMAIL=your_email@example.com\n   FPL_PASSWORD=your_password\n   FPL_TEAM_ID=your_team_id\n   ```\n   \n2. Or create `~/.fpl-mcp/config.json`:\n   ```json\n   {\n     \"email\": \"your_email@example.com\",\n     \"password\": \"your_password\",\n     \"team_id\": \"your_team_id\"\n   }\n   ```\n\n3. Or set environment variables:\n   ```bash\n   export FPL_EMAIL=your_email@example.com\n   export FPL_PASSWORD=your_password\n   export FPL_TEAM_ID=your_team_id\n   ```\n\n## Limitations\n\n- The FPL API is not officially documented and may change without notice\n- Only read operations are currently supported\n\n## Troubleshooting\n\n### Common Issues\n\n#### 1. \"spawn fpl-mcp ENOENT\" error in Claude Desktop\n\nThis occurs because Claude Desktop cannot find the `fpl-mcp` executable in its PATH.\n\n**Solution:** Use one of these approaches:\n\n- Use the full path to the executable in your config file\n  ```json\n  {\n    \"mcpServers\": {\n      \"fantasy-pl\": {\n        \"command\": \"/full/path/to/your/venv/bin/fpl-mcp\"\n      }\n    }\n  }\n  ```\n\n- Use Python to run the module directly (preferred method)\n  ```json\n  {\n    \"mcpServers\": {\n      \"fantasy-pl\": {\n        \"command\": \"python\",\n        \"args\": [\"-m\", \"fpl_mcp\"]\n      }\n    }\n  }\n  ```\n\n#### 2. Server disconnects immediately\n\nIf the server starts but immediately disconnects:\n\n- Check logs at `~/Library/Logs/Claude/mcp*.log` (macOS) or `%APPDATA%\\Claude\\logs\\mcp*.log` (Windows)\n- Ensure all dependencies are installed\n- Try running the server manually with `python -m fpl_mcp` to see any errors\n\n#### 3. Server not showing in Claude Desktop\n\nIf the hammer icon doesn't appear:\n\n- Restart Claude Desktop completely\n- Verify your `claude_desktop_config.json` has correct JSON syntax\n- Ensure the path to Python or the executable is absolute, not relative\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n1. Fork the repository\n2. Create your feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add some amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\nFor more details, please refer to the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n\n## Acknowledgments\n\n- [Fantasy Premier League API](https://fantasy.premierleague.com/api/) for providing the data\n- [Model Context Protocol](https://modelcontextprotocol.io/) for the connectivity standard\n- [Claude](https://claude.ai/) for the AI assistant capabilities\n\n## Citation\n\nIf you use this package in your research or project, please consider citing it:\n\n```bibtex\n@software{fpl_mcp,\n  author = {Jatia, Rishi and Fantasy PL MCP Contributors},\n  title = {Fantasy Premier League MCP Server},\n  url = {https://github.com/rishijatia/fantasy-pl-mcp},\n  version = {0.1.0},\n  year = {2025},\n}\n```\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "mcp",
        "fantasy",
        "league",
        "gaming integration",
        "league data",
        "integration gaming"
      ],
      "category": "gaming"
    },
    "sonirico--mpc-stockfish": {
      "owner": "sonirico",
      "name": "mpc-stockfish",
      "url": "https://github.com/sonirico/mcp-stockfish",
      "imageUrl": "",
      "description": "üèéÔ∏è üè† üçé ü™ü üêßÔ∏è MCP server connecting AI systems to Stockfish chess engine.",
      "stars": 0,
      "forks": 0,
      "license": "Unknown",
      "language": "Unknown",
      "updated_at": "",
      "readme_content": "",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "gaming",
        "stockfish",
        "chess",
        "gaming integration",
        "integration gaming",
        "chess engine"
      ],
      "category": "gaming"
    },
    "stefan-xyz--mcp-server-runescape": {
      "owner": "stefan-xyz",
      "name": "mcp-server-runescape",
      "url": "https://github.com/stefan-xyz/mcp-server-runescape",
      "imageUrl": "",
      "description": "An MCP server with tools for interacting with RuneScape (RS) and Old School RuneScape (OSRS) data, including item prices, player hiscores, and more.",
      "stars": 5,
      "forks": 3,
      "license": "Apache License 2.0",
      "language": "JavaScript",
      "updated_at": "2025-08-17T23:30:11Z",
      "readme_content": "# mcp-server-runescape\n[![npm version](https://badge.fury.io/js/mcp-server-runescape.svg)](https://badge.fury.io/js/mcp-server-runescape)\n[![smithery badge](https://smithery.ai/badge/@stefan-xyz/mcp-server-runescape)](https://smithery.ai/server/@stefan-xyz/mcp-server-runescape)\n\nThis is an MCP server with tools for interacting with RuneScape (RS) and Old School RuneScape (OSRS) data, including item prices, player hiscores, and more.\n\nhttps://github.com/user-attachments/assets/7c141575-443b-4b76-8b33-6d48ec82fbe7\n\n## Features\n\nThe MCP server provides several tools which are used to answer your questions during gaming with data from accurate sources.\n\n### 1. Item Details (`get_item_details`)\n\nRetrieve comprehensive information about tradeable items, including:\n\n- Current price in the Grand Exchange\n- Price trends (24h, 30, 90, and 180 days)\n- Name\n- Category\n- Description (examine text)\n- Image\n- Members\n- ID\n\nhttps://runescape.wiki/w/Application_programming_interface#detail\n\n### 2. Item Price History (`get_item_price_history`)\n\nAccess the price history of an item over the last 180 days, including:\n\n- Price on a given day (timestamp)\n- Average price on a given day (timestamp)\n\nhttps://runescape.wiki/w/Application_programming_interface#Graph\n\n### 3. Player Hiscore (`get_player_hiscore`)\n\nFetch rankings and experience for skills and activities of any player, including:\n\n- Player rank\n- Skill level\n- Experience points\n- Activity scores\n\nhttps://runescape.wiki/w/Application_programming_interface#Hiscores_Lite_2\n\n### 4. Top Rankings (`get_top_rankings`)\n\nView the top (max 50) players for a specific skill or activity, including:\n\n- Name\n- Score (used for both skill and activity)\n- Rank\n\nhttps://runescape.wiki/w/Application_programming_interface#ranking\n\n### 5. Player Count (`get_player_count`)\n\nGets the number of players currently online in RuneScape and Old School RuneScape, including:\n\n- Real-time player counts\n\nhttps://runescape.wiki/w/Application_programming_interface#player_count\n\n### 6. Account Totals (`get_rsuser_total`)\n\nGets the current amount of accounts created that can access any form of RuneScape. This includes accounts made on FunOrb or a particular version of RuneScape, including:\n\n- Historical accounts creation data\n\nhttps://runescape.wiki/w/Application_programming_interface#rsusertotal\n\n#### Note\n\nFor consistency I tried to only use API endpoints which support both RS and OSRS data.\n\n## Example Use Cases\n\nThe goal is for you to have an easy way to fetch more accurate data right from the source while scaping.\n\nHere are some example queries you can ask the AI when using this MCP server:\n\n### Item Details\n\n```\n\"What is the price of a dragon scimitar in the Grand Exchange?\"\n\"Torva full helm price\"\n\"Current price of a dragon pickaxe\"\n\"How much percentage has the price of a dragon pickaxe changed in the past 30 days?\"\n\"How much percentage has the price of a dragon pickaxe changed in the past 90 days?\"\n\"How much percentage has the price of a dragon pickaxe changed in the past 180 days?\"\n\"Give me the description of an armadyl godsword\"\n\"Give me the icon of a dragon scimitar\"\n\"What is the id of an abbyssal whip?\"\n```\n\n### Item Price History\n\n```\n\"Give me the price history of a dragon scimitar\"\n\"Rune scimitar price on 1 april 2025?\"\n```\n\n### Player Hiscore\n\n```\n\"What rank is Zezima?\"\n\"What rank is Zezima on runescape?\"\n\"How much experience does Lynx Titan have overall?\"\n\"Iron Hyger ironman rank?\"\n```\n\n### Top Rankings\n\n```\n\"Top 10 players overall?\"\n\"Give me the top 50 attack rankings\"\n\"Number one agility on runescape?\"\n\"Most zulrah kills?\"\n\"Give me the top 5 jad rankings\"\n```\n\n## Getting Started\n\n[Introduction to MCP servers](https://modelcontextprotocol.io/introduction)\n\nYou can use the MCP server in many clients, for example:\n\n- Claude desktop\n- Cursor\n\n### 1. Add the MCP server in your config (NPM Package)\n\nPaste this snippet in your mcp config that your client is using\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-server-runescape\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"mcp-server-runescape\"]\n    }\n  }\n}\n```\n\nYou can find the config file in (mac):\n\n- Claude desktop:\n\n`~/Library/Application Support/Claude/claude_desktop_config.json`\n\n- Cursor:\n\n`/Users/name/.cursor/mcp.json`\n\n### 2. From Source\n\n**Required** [Node.js](https://nodejs.org/en) installed on your system\n\n1. Clone this repository\n2. Install dependencies:\n   ```bash   \n   yarn\n   ```\n   or\n   ```bash   \n   npm install\n   ```\n3. Then update your Claude desktop or Cursor with:\n   ```json\n   {\n     \"mcpServers\": {\n       \"mcp-server-runescape\": {\n         \"command\": \"node\",\n         \"args\": [\"/Users/path/to/mcp-server-runescape/src/server.js\"]\n       }\n     }\n   }\n   ```\n4. **Optional**: Run the debugger/inspector\n   ```bash\n   yarn dev\n   ```\n   or\n   ```bash   \n   npm run build\n   ```\n\nMake sure to:\n\n- Replace `/path/to/mcp-server-runescape` with the actual path to your installation.\n\nAfter updating the configuration, restart Claude desktop or Cursor for the changes to take effect.\n\n#### Personal preference\n\nYou can use any client you want, my personal preference goes to Cursor at the moment in combination with deepseek-v3.1 which is performing really well.\n\n[List of clients](https://modelcontextprotocol.io/clients)\n\n## API Documentation\n\nFor detailed information about the Runescape API endpoints used by this MCP server, visit:\n[RS/Wiki API](https://runescape.wiki/w/Application_programming_interface)\n\n## Thank you\n\nI built this over the weekend, to learn a bit more about MCP servers. Runescape was the perfect subject to try it out on.\n\n- Shout out to the rs/wiki team for the docs and API.\n\nIf this helps you out in anyway when scaping and you would like to support me, feel free to\n\n[![\"Buy Me A Coffee\"](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://buymeacoffee.com/stefanxyz)\n",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "runescape",
        "osrs",
        "server",
        "server runescape",
        "runescape mcp",
        "runescape osrs"
      ],
      "category": "gaming"
    },
    "tomholford--mcp-tic-tac-toe": {
      "owner": "tomholford",
      "name": "mcp-tic-tac-toe",
      "url": "https://github.com/tomholford/mcp-tic-tac-toe",
      "imageUrl": "",
      "description": "Play Tic Tac Toe against an AI opponent using this MCP server.",
      "stars": 2,
      "forks": 1,
      "license": "No License",
      "language": "Go",
      "updated_at": "2025-09-08T08:37:22Z",
      "readme_content": "# MCP Tic-Tac-Toe\n\nA Model Context Protocol (MCP) server that enables AI assistants to play tic-tac-toe through standardized tool interfaces. Perfect for demonstrating AI-human collaboration and MCP integration.\n\n![mcp-tic-tac-toe screenshot](./mcp-tic-tac-toe-screenshot.png)\n\n## Overview\n\nThis project implements a complete tic-tac-toe game as an MCP server, allowing AI assistants like Claude to:\n- Create and manage multiple game sessions\n- Make strategic moves and analyze positions  \n- Provide game commentary and suggestions\n- Play against humans or other AIs\n\n## Quick Start\n\n### Prerequisites\n- Go 1.19+ installed\n- Claude Code or other MCP-compatible client\n\n### Installation\n```bash\ngit clone https://github.com/tomholford/mcp-tic-tac-toe\ncd mcp-tic-tac-toe\ngo mod tidy\ngo build -o bin/server cmd/server.go\n```\n\n### Basic Usage\n```bash\n# Start MCP server (stdio transport)\n./bin/server\n\n# Or specify transport method\n./bin/server -transport=sse -addr=:8080\n```\n\n## MCP Configuration\n\n### Claude Code Setup\n\n1. **Build the server:**\n   ```bash\n   go build -o bin/server cmd/server.go\n   ```\n\n2. **Add to your MCP configuration:**\n   \n   Create or edit your MCP configuration file:\n   ```bash\n   # For macOS/Linux\n   ~/.config/claude-code/mcp_servers.json\n   \n   # For Windows  \n   %APPDATA%\\claude-code\\mcp_servers.json\n   ```\n\n3. **Add the server configuration:**\n   ```json\n   {\n     \"mcpServers\": {\n       \"tic-tac-toe\": {\n         \"command\": \"/full/path/to/mcp-tic-tac-toe/bin/server\",\n         \"args\": [\"-transport=stdio\"],\n         \"env\": {}\n       }\n     }\n   }\n   ```\n\n4. **Restart Claude Code** and the tic-tac-toe tools will be available.\nc\n### Claude Desktop\n\n```json\n\"tic-tac-toe\": {\n  \"command\": \"/full/path/to/mcp-tic-tac-toe/bin/server\",\n  \"args\": [\"\"]\n}\n```\n\n## Available MCP Tools\n\nThe server exposes 8 tools for complete game management:\n\n### Game Management\n- **`new_game`** - Create a new tic-tac-toe game\n  - Optional: `game_id` (string) - Custom game identifier\n  - Returns: Game ID, starting player, initial board\n\n- **`list_games`** - Show all active game sessions  \n  - Returns: List of active game IDs\n\n- **`reset_game`** - Reset a game to initial state\n  - Required: `game_id` (string)\n  - Returns: Confirmation and fresh board\n\n### Gameplay  \n- **`make_move`** - Execute a move on the board\n  - Required: `game_id` (string), `position` (A1-C3), `player` (X/O)\n  - Returns: Updated board, game status, next player\n\n- **`get_board`** - Get current board state\n  - Required: `game_id` (string)  \n  - Returns: Board display, current player, move count\n\n- **`get_available_moves`** - List all valid moves\n  - Required: `game_id` (string)\n  - Returns: Available positions for current player\n\n### Analysis\n- **`get_status`** - Check game status and winner\n  - Required: `game_id` (string)\n  - Returns: Game status (ongoing/won/draw), winner if applicable\n\n- **`analyze_position`** - Get strategic analysis  \n  - Required: `game_id` (string)\n  - Returns: Position analysis and board state\n\n## Usage Examples\n\n### Start a New Game\n```\nAI: Use the new_game tool\n‚Üí New game created with ID: game-a1b2c3d4\n  Starting player: X\n  Initial board:\n    A B C\n  1 ¬∑ ¬∑ ¬∑\n  2 ¬∑ ¬∑ ¬∑  \n  3 ¬∑ ¬∑ ¬∑\n```\n\n### Make Strategic Moves\n```\nHuman: I'll take the center\nAI: Use make_move tool with {\"game_id\": \"game-a1b2c3d4\", \"position\": \"B2\", \"player\": \"X\"}\n\nAI: Let me analyze the position first\nAI: Use analyze_position tool ‚Üí Shows current state and opportunities\n\nAI: I'll take a corner for strategic advantage  \nAI: Use make_move tool with {\"game_id\": \"game-a1b2c3d4\", \"position\": \"A1\", \"player\": \"O\"}\n```\n\n### Get Game Status\n```\nAI: Use get_status tool ‚Üí Game Status: Ongoing, Current player: X, Move count: 2\nAI: Use get_available_moves tool ‚Üí Available moves (7): A2, A3, B1, B3, C1, C2, C3\n```\n\n## Transport Options\n\nThe server supports three transport methods:\n\n### 1. Stdio (Default)\nBest for local MCP clients like Claude Code:\n```bash\n./bin/server -transport=stdio\n```\n\n### 2. Server-Sent Events (SSE)  \nFor web applications and real-time updates:\n```bash\n./bin/server -transport=sse -addr=:8080\n```\n\n### 3. Streamable HTTP\nFor traditional HTTP integrations:\n```bash  \n./bin/server -transport=http -addr=:8080\n```\n\n## Development\n\n### Project Structure\n```\nmcp-tic-tac-toe/\n‚îú‚îÄ‚îÄ cmd/\n‚îÇ   ‚îú‚îÄ‚îÄ server.go          # MCP server main entry point\n‚îÇ   ‚îî‚îÄ‚îÄ demo.go            # Game logic demonstration  \n‚îú‚îÄ‚îÄ game/                  # Core tic-tac-toe logic\n‚îÇ   ‚îú‚îÄ‚îÄ types.go           # Game data structures\n‚îÇ   ‚îú‚îÄ‚îÄ engine.go          # Game rules and validation\n‚îÇ   ‚îî‚îÄ‚îÄ engine_test.go     # Game logic tests\n‚îú‚îÄ‚îÄ server/                # MCP server implementation  \n‚îÇ   ‚îú‚îÄ‚îÄ server.go          # MCP server setup and tools\n‚îÇ   ‚îú‚îÄ‚îÄ handlers.go        # Tool request handlers\n‚îÇ   ‚îî‚îÄ‚îÄ server_test.go     # MCP integration tests\n‚îî‚îÄ‚îÄ bin/                   # Built executables\n```\n\n### Running Tests\n```bash\n# Test all packages\ngo test ./game ./server -v\n\n# Test specific functionality\ngo test ./game -run TestWinConditions\ngo test ./server -run TestMakeMoveTool\n```\n\n### Building from Source\n```bash\n# Build server\ngo build -o bin/server cmd/server.go\n\n# Build demo\ngo build -o bin/demo cmd/demo.go\n\n# Run demo (no MCP required)\n./bin/demo\n```\n\n## Resources\n\n- [MCP Specification](https://modelcontextprotocol.io/) - Official MCP documentation\n- [mcp-go Library](https://github.com/mark3labs/mcp-go) - Go MCP implementation used in this project",
      "npm_url": "",
      "npm_downloads": 0,
      "keywords": [
        "gaming",
        "tic",
        "mcp",
        "integration gaming",
        "gaming integration",
        "mcp tic"
      ],
      "category": "gaming"
    }
  }
}